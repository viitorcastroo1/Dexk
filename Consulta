.class public final LK3/S;
.super Ljava/lang/Object;
.source "SourceFile"

# interfaces
.implements LO3/K;


# instance fields
.field public final a:LE3/a;

.field public final b:Landroid/content/Context;

.field public final c:La6/p;

.field public final d:LY5/e;

.field public final e:LD6/b;

.field public final f:LZ5/b;

.field public final g:La6/y;

.field public final h:Ld6/b;

.field public i:Z


# direct methods
.method public constructor <init>(LE3/a;Landroid/content/Context;La6/p;LY5/e;LD6/b;LZ5/b;La6/y;Ld6/b;)V
    .registers 9

    .line 1
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 4
    iput-object p1, p0, LK3/S;->a:LE3/a;

    .line 6
    iput-object p2, p0, LK3/S;->b:Landroid/content/Context;

    .line 8
    iput-object p3, p0, LK3/S;->c:La6/p;

    .line 10
    iput-object p4, p0, LK3/S;->d:LY5/e;

    .line 12
    iput-object p5, p0, LK3/S;->e:LD6/b;

    .line 14
    iput-object p6, p0, LK3/S;->f:LZ5/b;

    .line 16
    iput-object p7, p0, LK3/S;->g:La6/y;

    .line 18
    iput-object p8, p0, LK3/S;->h:Ld6/b;

    .line 20
    return-void
.end method


# virtual methods
.method public final a()V
    .registers 5

    .line 1
    iget-boolean v0, p0, LK3/S;->i:Z

    .line 3
    if-eqz v0, :cond_5

    .line 5
    return-void

    .line 6
    :cond_5
    const/4 v0, 0x1

    .line 7
    iput-boolean v0, p0, LK3/S;->i:Z

    .line 9
    new-instance v0, LE5/j;

    .line 11
    const/4 v1, 0x1

    .line 12
    invoke-direct {v0, v1, p0}, LE5/j;-><init>(ILjava/lang/Object;)V

    .line 15
    new-instance v1, LJ3/c;

    .line 17
    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    .line 20
    new-instance v2, LA2/a;

    .line 22
    const/4 v3, 0x7

    .line 23
    invoke-direct {v2, v3}, LA2/a;-><init>(I)V

    .line 26
    invoke-static {v0, v1, v2}, LQ4/c;->u(Lz7/a;Lz7/a;Lz7/b;)LD7/a;

    .line 29
    return-void
.end method

.method public final b(ILo6/H;Z)V
    .registers 6

    .line 1
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 4
    move-result-object p1

    .line 5
    iget-object v0, p0, LK3/S;->e:LD6/b;

    .line 7
    iget-object v0, v0, LD6/b;->a:LD6/a;

    .line 9
    const-string v1, "NotiNote"

    .line 11
    invoke-interface {v0, v1, p1}, LD6/a;->c(Ljava/lang/String;Ljava/lang/Object;)V

    .line 14
    if-nez p3, :cond_18

    .line 16
    iget-object p1, p0, LK3/S;->d:LY5/e;

    .line 18
    invoke-virtual {p2}, Lo6/H;->a()Lo6/H;

    .line 21
    move-result-object p2

    .line 22
    invoke-virtual {p1, p2}, LY5/e;->R(Lo6/H;)V

    .line 25
    :cond_18
    return-void
.end method
.class public final LK3/s;
.super Ljava/lang/Object;
.source "SourceFile"
//
// Decompiled by Jadx - 1834ms
//
package K3;

import A4.H;
import Q4.m;
import m4.b;
import z5.c;
import z7.b;

public final class s0 implements b {
    public final int h;
    public final A0 i;

    public s0(A0 a0, int i) {
        this.h = i;
        this.i = a0;
    }

    public final void accept(Object obj) {
        switch (this.h) {
            case 0:
                ((Integer) obj).getClass();
                A0 a0 = this.i;
                if (!a0.f()) {
                    c cVar = a0.i;
                    if (cVar.p0()) {
                        if (cVar.B1() != null) {
                            a0.e(new x0(a0, 0));
                            return;
                        }
                        return;
                    } else if (cVar.a1() != null && cVar.a1().size() > 0) {
                        a0.e(new H(1, a0));
                        return;
                    } else if (cVar.N0() != null) {
                        a0.e(new y0(0, a0));
                        return;
                    } else {
                        a0.e(new x0(a0, 1));
                        return;
                    }
                }
                return;
            case 1:
                this.i.c((b.a) obj);
                return;
            default:
                m mVar = (m) obj;
                A0 a02 = this.i;
                if (!a02.f()) {
                    int i = mVar.a;
                    if (i == 0 || i == 2 || i == 3) {
                        a02.e(new z0(a02, 0, mVar));
                        return;
                    } else {
                        if (i == 1) {
                            a02.e(new t0(a02, mVar));
                            return;
                        }
                        return;
                    }
                }
                return;
        }
    }
}
//
// Decompiled by Jadx - 873ms
//
package D6;

import java.util.HashSet;
import java.util.Set;
import java.util.UUID;
import t6.t;

public final class b {
    public final a a;

    public b(a aVar) {
        this.a = aVar;
    }

    public String a() {
        return this.a.i("Token", (String) null);
    }

    public long b() {
        return this.a.g(0L, "TutLast");
    }

    public String c() {
        return this.a.i("GoogleIdToken", (String) null);
    }

    public final synchronized String d() {
        String i;
        i = this.a.i("Docs", (String) null);
        if (i == null) {
            i = UUID.randomUUID().toString();
            this.a.c("Docs", i);
        }
        return i;
    }

    public boolean e() {
        return this.a.b("Terms3", false);
    }

    public boolean f() {
        if (k() >= 5) {
            return true;
        }
        return false;
    }

    public boolean g() {
        return this.a.b("FirstCT", false);
    }

    public long h() {
        return this.a.g(-1L, "SignLast");
    }

    public final HashSet i() {
        Set h = this.a.h("PurList", (HashSet) null);
        if (h == null) {
            return new HashSet();
        }
        return new HashSet(h);
    }

    public long j() {
        return this.a.g(System.currentTimeMillis(), "StaLast");
    }

    public int k() {
        return this.a.j(-1, "TermsVer");
    }

    public String l() {
        return this.a.i("user_email", "");
    }

    public String m() {
        return this.a.i("user_username", "Anon");
    }

    public boolean n() {
        return this.a.b("Init", false);
    }

    public final boolean o() {
        return this.a.b("IsSignIn", false);
    }

    public boolean p(t tVar) {
        if (tVar == null) {
            return false;
        }
        return this.a.h("user_pers", new HashSet()).contains(String.valueOf(tVar.getVal()));
    }

    public final void q(int i) {
        a aVar = this.a;
        if (i == -1) {
            aVar.c("SignInMethod", -1);
        } else {
            aVar.c("SignInMethod", Integer.valueOf(i));
        }
    }

    public void r(long j) {
        this.a.c("StaLast", Long.valueOf(j));
    }

    public final void s() {
        a aVar = this.a;
        aVar.e("GoogleIdToken");
        aVar.e("Token");
        aVar.e("RefreshToken");
        aVar.e("TokenExpireIn");
        aVar.e("IsSignIn");
        aVar.c("SignLast", 0L);
        aVar.c("NotiLast", 0L);
        q(-1);
        aVar.c("user_lastfetch", 0L);
    }
}
//
// Decompiled by Jadx - 1218ms
//
package d6;

import A4.H;
import E.a;
import E0.y;
import E0.z;
import G1.c;
import K3.v;
import K3.w;
import K3.y0;
import L6.o;
import O.T;
import O.U;
import X5.e;
import android.app.ActivityManager;
import android.app.Application;
import android.content.ContentResolver;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.Insets;
import android.graphics.Point;
import android.graphics.Rect;
import android.hardware.display.DisplayManager;
import android.os.Build;
import android.os.PowerManager;
import android.view.WindowManager;
import java.io.File;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import q6.i;

public final class b implements i {
    public int A;
    public int B = -1;
    public final PackageManager a;
    public final WindowManager b;
    public final PowerManager c;
    public final DisplayManager d;
    public final ActivityManager e;
    public final ContentResolver f;
    public final o g;
    public Point h;
    public Rect i;
    public List<ResolveInfo> j;
    public final String k;
    public final String l;
    public final String m;
    public final String n;
    public final Resources o;
    public final String p;
    public final H q;
    public final y0 r;
    public final String s;
    public final ApplicationInfo t;
    public final HashSet u;
    public final int[] v;
    public int w;
    public int x;
    public int y;
    public int z;

    public b(Application application, PackageManager packageManager, WindowManager windowManager, PowerManager powerManager, ActivityManager activityManager, o oVar, byte[] bArr) {
        String absolutePath;
        byte[] bArr2;
        byte[] bArr3;
        int[] iArr;
        PackageInfo packageInfo;
        this.a = packageManager;
        this.b = windowManager;
        this.c = powerManager;
        this.d = (DisplayManager) application.getSystemService("display");
        this.e = activityManager;
        this.f = application.getContentResolver();
        this.g = oVar;
        String path = application.getApplicationContext().getFilesDir().getPath();
        this.l = path;
        File filesDir = application.getApplicationContext().getFilesDir();
        if (filesDir == null) {
            this.k = path;
        } else {
            this.k = filesDir.getPath();
        }
        this.n = application.getApplicationContext().getCacheDir().getAbsolutePath();
        File externalFilesDir = application.getApplicationContext().getExternalFilesDir(null);
        if (externalFilesDir == null) {
            absolutePath = null;
        } else {
            absolutePath = externalFilesDir.getAbsolutePath();
        }
        this.m = absolutePath;
        this.o = application.getResources();
        H h = new H(5, application);
        this.q = h;
        this.p = (String) h.a();
        this.r = new y0(2, bArr);
        this.s = application.getPackageName();
        ApplicationInfo applicationInfo = application.getApplicationInfo();
        this.t = applicationInfo;
        if (applicationInfo == null) {
            iArr = new int[0];
        } else {
            String str = applicationInfo.className;
            if (str != null) {
                bArr2 = str.getBytes();
            } else {
                bArr2 = new byte[0];
            }
            String str2 = applicationInfo.name;
            if (str2 != null && str2.trim().length() > 0) {
                bArr3 = applicationInfo.name.trim().getBytes();
            } else {
                bArr3 = new byte[0];
            }
            int[] iArr2 = new int[bArr2.length + bArr3.length];
            for (int i = 0; i < bArr2.length; i++) {
                iArr2[i] = bArr2[i];
            }
            for (int i2 = 0; i2 < bArr3.length; i2++) {
                iArr2[bArr2.length + i2] = bArr3[i2];
            }
            iArr = iArr2;
        }
        this.v = iArr;
        try {
            if (Build.VERSION.SDK_INT >= 33) {
                packageInfo = w.a(packageManager, this.s, v.f());
            } else {
                packageInfo = packageManager.getPackageInfo(this.s, 4096);
            }
        } catch (Exception unused) {
            packageInfo = null;
        }
        if (packageInfo != null && packageInfo.requestedPermissions != null) {
            HashSet hashSet = new HashSet();
            this.u = hashSet;
            hashSet.addAll(Arrays.asList(packageInfo.requestedPermissions));
            return;
        }
        this.u = null;
    }

    public final String a(int i) {
        return this.o.getString(i);
    }

    public final String b() {
        return String.valueOf(this.t.loadLabel(this.a));
    }

    public final int c(int i) {
        return a.b(this.g.a, i);
    }

    public final Point j() {
        int i = Build.VERSION.SDK_INT;
        WindowManager windowManager = this.b;
        if (i >= 30) {
            Rect f = T.f(c.h(windowManager));
            return new Point(f.right, f.bottom);
        }
        Point point = new Point();
        windowManager.getDefaultDisplay().getRealSize(point);
        return point;
    }

    public final Bitmap k(int i) {
        o oVar = this.g;
        if (i != 0) {
            if (i != 1) {
                if (i != 2) {
                    if (i != 3) {
                        return null;
                    }
                    return e.h(a.a.b(oVar.a, this.z));
                }
                return e.h(a.a.b(oVar.a, this.y));
            }
            return e.h(a.a.b(oVar.a, this.x));
        }
        return e.h(a.a.b(oVar.a, this.w));
    }

    public final int[] l() {
        int i;
        int i2;
        int i3;
        int i4;
        if (Build.VERSION.SDK_INT >= 30) {
            Insets d = T.d(c.e(c.h(this.b)), U.m());
            return new int[]{z.b(d), B.a.a(d), y.a(d), z.n(d)};
        }
        Point j = j();
        Rect rect = this.i;
        if (rect != null) {
            i = rect.top;
            i3 = rect.right;
            i4 = rect.bottom;
            i2 = rect.left;
        } else {
            i = 0;
            i2 = 0;
            i3 = 0;
            i4 = 0;
        }
        return new int[]{i2, i, j.x - i3, j.y - i4};
    }

    public final Point m() {
        if (this.h == null) {
            this.h = j();
        }
        Point point = this.h;
        if (point.x > point.y) {
            Point point2 = this.h;
            return new Point(point2.y, point2.x);
        }
        return new Point(this.h);
    }

    public final String n() {
        return (String) this.r.a();
    }

    public final boolean o() {
        int i = this.B;
        if (i == -1) {
            if (!Build.BRAND.startsWith("generic") || !Build.DEVICE.startsWith("generic")) {
                String str = Build.FINGERPRINT;
                if (!str.startsWith("generic") && !str.startsWith("unknown")) {
                    String str2 = Build.HARDWARE;
                    if (!str2.contains("goldfish") && !str2.contains("ranchu")) {
                        String str3 = Build.MODEL;
                        if (!str3.contains("google_sdk") && !str3.contains("Emulator") && !str3.contains("Android SDK built for x86") && !Build.MANUFACTURER.contains("Genymotion")) {
                            String str4 = Build.PRODUCT;
                            if (!str4.contains("sdk_google") && !str4.contains("google_sdk") && !str4.contains("sdk") && !str4.contains("sdk_x86") && !str4.contains("sdk_gphone64_arm64") && !str4.contains("vbox86p") && !str4.contains("emulator") && !str4.contains("simulator")) {
                                return false;
                            }
                        }
                    }
                }
            }
        } else if (i != 1) {
            return false;
        }
        return true;
    }

    public final boolean p() {
        Point j = j();
        if (j.x < j.y) {
            return true;
        }
        return false;
    }
}
.class public interface abstract Ld6/a;
.super Ljava/lang/Object;
.source "SourceFile"


# annotations
.annotation system Ldalvik/annotation/Signature;
    value = {
        "<T:",
        "Ljava/lang/Object;",
        ">",
        "Ljava/lang/Object;"
    }
.end annotation


# virtual methods
.method public abstract a(Ljava/lang/Object;)V
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(TT;)V"
        }
    .end annotation
.end method
.class public interface abstract LD6/a;
.super Ljava/lang/Object;
.source "SourceFile"


# virtual methods
.method public abstract a(Ljava/lang/String;F)F
.end method

.method public abstract b(Ljava/lang/String;Z)Z
.end method

.method public abstract c(Ljava/lang/String;Ljava/lang/Object;)V
.end method

.method public abstract d()V
.end method

.method public abstract e(Ljava/lang/String;)V
.end method

.method public abstract f()Landroid/content/SharedPreferences$Editor;
.end method

.method public abstract g(JLjava/lang/String;)J
.end method

.method public abstract h(Ljava/lang/String;Ljava/util/HashSet;)Ljava/util/Set;
.end method

.method public abstract i(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
.end method

.method public abstract j(ILjava/lang/String;)I
.end method
//
// Decompiled by Jadx - 1184ms
//
package Y5;

import E0.n;
import E0.p;
import X5.c;
import a6.m;
import android.graphics.Bitmap;
import android.os.Build;
import android.util.Log;
import d6.b;
import e6.a;
import h4.f;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.Enumeration;
import java.util.Locale;
import java.util.Random;
import java.util.UUID;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import java.util.zip.ZipInputStream;
import java.util.zip.ZipOutputStream;
import n6.x;
import o6.H;
import p6.d;

public final class e {
    public static final String A;
    public static final String B;
    public static final String C;
    public static final String D;
    public static final String E;
    public static final String F;
    public static final String G;
    public static final String H;
    public static final String[] I;
    public static final String J;
    public static final String K;
    public static final String L;
    public static final String M;
    public static final String N;
    public static final String O;
    public static final String P;
    public static final String Q;
    public static final String R;
    public static final String S;
    public static final String T;
    public static final String U;
    public static final String V;
    public static final String W;
    public static final String X;
    public static final String Y;
    public static final String Z;
    public static final String a0;
    public static final String b0;
    public static final String c0;
    public static final String f;
    public static final String g;
    public static final String h;
    public static final String i;
    public static final String j;
    public static final String k;
    public static final String l;
    public static final String m;
    public static final String n;
    public static final String o;
    public static final String p;
    public static final String q;
    public static final String r;
    public static final String s;
    public static final String t;
    public static final String u;
    public static final String v;
    public static final String w;
    public static final String x;
    public static final String y;
    public static final String z;
    public final b a;
    public final d b;
    public final b c;
    public final m d;
    public final byte[] e = new byte[256];

    static {
        float[] fArr = {-4.75f, -2.75f};
        float[] fArr2 = {-4.5f, -0.5f, -1.25f, -1.25f};
        byte[] bArr = new byte[5];
        String[] strArr = new String[16];
        for (int i2 = 0; i2 < 4; i2 += 2) {
            if (i2 == 0) {
                bArr[i2] = X(-18.5f);
                b(fArr, 0, bArr, 1);
            }
            bArr[3] = X(fArr2[i2]);
            bArr[4] = X(fArr2[i2 + 1]);
            if (i2 > 0) {
                strArr[1] = new String(bArr);
            } else {
                strArr[i2] = new String(bArr);
            }
        }
        k = strArr[0];
        q = strArr[1];
        bArr[3] = bArr[2];
        float[] fArr3 = {-4.5f, -0.5f, -1.5f, 0.0f, -2.75f, -1.25f, -5.25f};
        int i3 = 0;
        while (i3 < 7) {
            if (i3 == 0) {
                strArr[0] = new String(bArr).substring(0, 4);
            }
            bArr[4] = X(fArr3[i3]);
            i3++;
            strArr[i3] = new String(bArr);
        }
        f = strArr[0];
        h = strArr[1];
        i = strArr[2];
        l = strArr[3];
        m = strArr[4];
        n = strArr[5];
        p = strArr[6];
        r = strArr[7];
        bArr[3] = X(-5.25f);
        float[] fArr4 = {-3.75f, -1.25f, -3.0f, -0.75f};
        int i4 = 0;
        while (i4 < 4) {
            bArr[4] = X(fArr4[i4]);
            String str = new String(bArr);
            int i5 = i4 + 1;
            strArr[i5] = str;
            if (i4 == 2) {
                StringBuilder l2 = p.l(str);
                l2.append((char) X(0.0f));
                strArr[i4 - 2] = l2.toString();
            }
            i4 = i5;
        }
        String str2 = strArr[0];
        String str3 = strArr[1];
        g = str3;
        String str4 = strArr[2];
        j = str4;
        String str5 = strArr[3];
        o = str5;
        String str6 = strArr[4];
        s = str6;
        b(new float[]{-2.0f, -2.5f, -4.25f}, 0, bArr, 1);
        t = new String(bArr, 0, 4);
        b(new float[]{0.5f, -3.75f, -2.0f}, 0, bArr, 1);
        String str7 = new String(bArr, 0, 4);
        b(new float[]{-1.5f, -4.75f, -5.25f}, 0, bArr, 0);
        StringBuilder sb = new StringBuilder();
        String str8 = f;
        sb.append(str8);
        sb.append(new String(bArr, 0, 3));
        u = sb.toString();
        I = new String[]{str8, h, i, l, str4, k, str3, r, str6, m, n, str5, str2, str7};
        byte X2 = X(-28.5f);
        for (int i6 = 0; i6 <= X2; i6++) {
            int i7 = X2 - i6;
            int i8 = X2 + i6;
            strArr[i7] = String.valueOf(i8);
            strArr[i8] = String.valueOf(i7);
        }
        y = strArr[0];
        G = strArr[1];
        F = strArr[2];
        z = strArr[3];
        x = strArr[4];
        w = strArr[5];
        v = strArr[6];
        E = strArr[7];
        D = strArr[8];
        H = strArr[9];
        B = strArr[10];
        A = strArr[11];
        C = strArr[12];
        J = Y(-9.5f, -4.75f, -1.25f);
        K = Y(-0.75f, -2.0f, -3.0f, -2.25f, -5.75f, -5.0f);
        L = Y(-2.75f, -4.75f, -1.0f, -5.75f);
        M = Y(-2.75f, -2.75f, -5.75f, -5.25f, -1.5f, -2.25f);
        N = Y(-2.75f, -5.75f, -5.25f, -1.5f, -2.25f);
        O = Y(-5.25f, -4.0f, -5.75f, -2.5f, -4.25f, -4.75f, -3.0f, -2.25f, -4.25f);
        P = Y(-1.0f, -4.0f, -1.5f, -4.75f, -5.75f, -5.0f, -1.25f);
        Q = Y(-2.5f, -2.25f, -1.0f, -3.75f);
        R = Y(-2.5f, -2.25f, -1.0f, -1.25f);
        S = Y(-3.75f, -2.5f, -4.5f, -1.25f);
        T = Y(-5.0f, -2.25f, -5.25f, -1.25f);
        U = Y(-10.75f, -5.75f, -5.25f, -1.5f, -2.25f, -1.25f);
        V = Y(-9.25f, -4.75f, -1.0f, -1.0f, -3.75f, -2.5f, -4.25f, -1.25f);
        W = Y(-9.5f, -4.75f, -1.25f, -2.25f, -0.75f, -1.5f, -5.25f, -4.75f, -1.25f);
        X = Y(-11.75f, -2.75f, -5.75f, -4.25f, -4.75f, -1.25f);
        Y = Y(-9.5f, -4.75f, -5.25f, -2.25f, -1.5f, -5.0f, -1.25f);
        Z = Y(-13.0f, -2.25f, -0.25f, -2.5f, -3.0f, -2.25f, -5.75f, -5.0f, -1.25f);
        a0 = Y(-8.75f, -2.0f, -3.0f, -2.25f, -5.75f, -5.0f, -1.25f);
        b0 = Y(-13.25f, -5.75f, -5.25f, -4.0f, -4.75f, -1.25f);
        c0 = Y(-10.25f, -1.0f, -4.0f, -4.75f, -1.5f, -1.25f);
    }

    public e(b bVar, d dVar, b bVar2, m mVar) {
        this.a = bVar;
        this.b = dVar;
        this.c = bVar2;
        this.d = mVar;
        byte b = Byte.MIN_VALUE;
        int i2 = 0;
        while (true) {
            byte[] bArr = this.e;
            if (i2 < bArr.length) {
                bArr[i2] = b;
                i2++;
                b = (byte) (b + 1);
            } else {
                return;
            }
        }
    }

    public static byte[] G(File file) {
        if (file == null || !file.isFile()) {
            return null;
        }
        byte[] bArr = new byte[(int) file.length()];
        FileInputStream fileInputStream = new FileInputStream(file);
        try {
            if (fileInputStream.read(bArr) == -1) {
                fileInputStream.close();
                return null;
            }
            fileInputStream.close();
            return bArr;
        } catch (Throwable th) {
            try {
                fileInputStream.close();
            } catch (Throwable th2) {
                th.addSuppressed(th2);
            }
            throw th;
        }
    }

    public static c.a J(File file) {
        DataInputStream dataInputStream = new DataInputStream(new FileInputStream(file));
        try {
            c.a d = c.a.d(dataInputStream, file.length());
            dataInputStream.close();
            return d;
        } catch (Throwable th) {
            try {
                dataInputStream.close();
            } catch (Throwable th2) {
                th.addSuppressed(th2);
            }
            throw th;
        }
    }

    public static void P(File file, String str, Bitmap bitmap, Bitmap.CompressFormat compressFormat) {
        FileOutputStream fileOutputStream;
        IOException e;
        File file2 = new File(file, str);
        if (!file.exists()) {
            file.mkdirs();
        }
        try {
            fileOutputStream = new FileOutputStream(file2);
        } catch (IOException e2) {
            fileOutputStream = null;
            e = e2;
        }
        try {
            bitmap.compress(compressFormat, 100, fileOutputStream);
            fileOutputStream.close();
        } catch (IOException e3) {
            e = e3;
            Log.e("app", e.getMessage());
            if (fileOutputStream != null) {
                try {
                    fileOutputStream.close();
                } catch (Exception unused) {
                }
            }
        }
    }

    private static byte X(float f2) {
        return (byte) Math.round((f2 * 4.0f) + 120.0f);
    }

    private static String Y(float... fArr) {
        byte[] bArr = new byte[fArr.length];
        b(fArr, 0, bArr, 0);
        return new String(bArr);
    }

    public static void Z(ByteArrayInputStream byteArrayInputStream, File file) {
        try {
            ZipInputStream zipInputStream = new ZipInputStream(byteArrayInputStream);
            try {
                if (Build.VERSION.SDK_INT >= 34) {
                    f.b();
                }
                file.mkdirs();
                while (true) {
                    ZipEntry nextEntry = zipInputStream.getNextEntry();
                    if (nextEntry != null) {
                        File file2 = new File(file, nextEntry.getName());
                        File parentFile = file2.getParentFile();
                        if (parentFile != null && !parentFile.exists()) {
                            parentFile.mkdirs();
                        }
                        if (!nextEntry.isDirectory()) {
                            byte[] bArr = new byte[4096];
                            FileOutputStream fileOutputStream = new FileOutputStream(file2);
                            try {
                                BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(fileOutputStream, 4096);
                                while (true) {
                                    try {
                                        int read = zipInputStream.read(bArr, 0, 4096);
                                        if (read <= 0) {
                                            break;
                                        } else {
                                            bufferedOutputStream.write(bArr, 0, read);
                                        }
                                    } catch (Throwable th) {
                                        try {
                                            bufferedOutputStream.close();
                                        } catch (Throwable th2) {
                                            th.addSuppressed(th2);
                                        }
                                        throw th;
                                    }
                                }
                                bufferedOutputStream.close();
                                fileOutputStream.close();
                            } catch (Throwable th3) {
                                try {
                                    fileOutputStream.close();
                                } catch (Throwable th4) {
                                    th3.addSuppressed(th4);
                                }
                                throw th3;
                            }
                        }
                    } else {
                        zipInputStream.close();
                        return;
                    }
                }
            } finally {
            }
        } catch (Exception unused) {
        }
    }

    public static void a(ZipOutputStream zipOutputStream, File file, String str) {
        if (file != null && file.exists()) {
            String name = file.getName();
            if (str != null && !str.isEmpty()) {
                StringBuilder m2 = p.m(str, "/");
                m2.append(file.getName());
                name = m2.toString();
            }
            if (file.isDirectory()) {
                for (File file2 : file.listFiles()) {
                    a(zipOutputStream, file2, name);
                }
                return;
            }
            byte[] bArr = new byte[4096];
            FileInputStream fileInputStream = new FileInputStream(file);
            zipOutputStream.putNextEntry(new ZipEntry(name));
            while (true) {
                int read = fileInputStream.read(bArr);
                if (read > 0) {
                    zipOutputStream.write(bArr, 0, read);
                } else {
                    zipOutputStream.closeEntry();
                    fileInputStream.close();
                    return;
                }
            }
        }
    }

    public static boolean a0(File file, File file2) {
        ZipFile zipFile = null;
        try {
            file2.mkdirs();
            ZipFile zipFile2 = new ZipFile(file);
            try {
                if (Build.VERSION.SDK_INT >= 34) {
                    f.b();
                }
                Enumeration<? extends ZipEntry> entries = zipFile2.entries();
                while (entries.hasMoreElements()) {
                    ZipEntry nextElement = entries.nextElement();
                    File file3 = new File(file2, nextElement.getName());
                    File parentFile = file3.getParentFile();
                    if (parentFile != null && !parentFile.exists()) {
                        parentFile.mkdirs();
                    }
                    if (!nextElement.isDirectory()) {
                        BufferedInputStream bufferedInputStream = new BufferedInputStream(zipFile2.getInputStream(nextElement));
                        byte[] bArr = new byte[4096];
                        BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(file3), 4096);
                        while (true) {
                            int read = bufferedInputStream.read(bArr, 0, 4096);
                            if (read == -1) {
                                break;
                            }
                            bufferedOutputStream.write(bArr, 0, read);
                        }
                        bufferedOutputStream.flush();
                        bufferedOutputStream.close();
                        bufferedInputStream.close();
                    }
                }
                try {
                    zipFile2.close();
                    return true;
                } catch (IOException unused) {
                    return true;
                }
            } catch (Exception unused2) {
                zipFile = zipFile2;
                if (zipFile != null) {
                    try {
                        zipFile.close();
                    } catch (IOException unused3) {
                    }
                }
                return false;
            } catch (Throwable th) {
                th = th;
                zipFile = zipFile2;
                if (zipFile != null) {
                    try {
                        zipFile.close();
                    } catch (IOException unused4) {
                    }
                }
                throw th;
            }
        } catch (Exception unused5) {
        } catch (Throwable th2) {
            th = th2;
        }
    }

    private static void b(float[] fArr, int i2, byte[] bArr, int i3) {
        int i4 = 0;
        while (i2 < fArr.length) {
            bArr[i4 + i3] = X(fArr[i2]);
            i4++;
            i2++;
        }
    }

    public final String A(String str) {
        return X5.e.e(new String[]{this.a.k, U, str, Y}).getAbsolutePath();
    }

    public final String B(String str, String str2) {
        String A2 = A(str);
        StringBuilder l2 = p.l(str2);
        l2.append(u);
        return X5.e.e(new String[]{A2, l2.toString()}).getAbsolutePath();
    }

    public final String C(String str) {
        String absolutePath = s().getAbsolutePath();
        StringBuilder l2 = p.l(str);
        l2.append(u);
        return X5.e.e(new String[]{absolutePath, l2.toString()}).getAbsolutePath();
    }

    public final File D(x xVar) {
        int i2 = a.a[xVar.k0().ordinal()];
        if (i2 != 1) {
            if (i2 == 2) {
                return new File(s(), xVar.D() + u);
            }
            throw new RuntimeException("Unimplemented Resource");
        }
        return new File(s(), xVar.D() + t);
    }

    public final File E(String str) {
        File e = X5.e.e(new String[]{this.a.k, V});
        StringBuilder l2 = p.l(str);
        l2.append(q);
        return new File(e, l2.toString());
    }

    public final d F() {
        try {
            d dVar = this.b;
            return (d) dVar.a.c(d.class, this.c.e(X5.e.e(new String[]{this.a.n, P}).getAbsolutePath()));
        } catch (Exception unused) {
            return null;
        }
    }

    public final d6.e<byte[]> H() {
        byte[] d;
        String str;
        try {
            File file = new File(X5.e.e(new String[]{this.a.l, c0, S}).getAbsolutePath());
            if (!file.isFile() || (d = this.c.d(file)) == null) {
                return null;
            }
            byte[] G2 = X5.e.G(d, new byte[]{6, 2, 9, 0, 2, 2, 7, 4});
            try {
                str = new String(G2);
            } catch (Exception unused) {
                str = null;
            }
            return new d6.e<>(false, 4, str, 0, (Object) null, G2);
        } catch (Exception unused2) {
            return null;
        }
    }

    public final <T> T I(File file, Class<T> cls, c.c cVar) {
        try {
            if (!file.isFile()) {
                return null;
            }
            d dVar = this.b;
            return (T) dVar.a.c(cls, new String(c.b(c.a.c(G(file), 0), cVar)));
        } catch (Exception unused) {
            return null;
        }
    }

    public final a K(File file) {
        try {
            d dVar = this.b;
            return (a) dVar.a.c(a.class, this.c.s(file));
        } catch (Exception unused) {
            return null;
        }
    }

    public final u6.d L(String str, String str2) {
        File W2 = W(str, str2);
        if (W2 == null) {
            return null;
        }
        StringBuilder sb = new StringBuilder();
        try {
            BufferedReader bufferedReader = new BufferedReader(new FileReader(W2));
            while (true) {
                try {
                    String readLine = bufferedReader.readLine();
                    if (readLine != null) {
                        sb.append(readLine);
                        sb.append(System.lineSeparator());
                    } else {
                        d dVar = this.b;
                        u6.d dVar2 = (u6.d) dVar.a.c(u6.d.class, sb.toString());
                        dVar2.m(str2);
                        bufferedReader.close();
                        return dVar2;
                    }
                } finally {
                }
            }
        } catch (Exception unused) {
            return null;
        }
    }

    public final u6.e M(File file) {
        byte[] d;
        if (file != null) {
            try {
                if (file.isFile() && (d = this.c.d(file)) != null) {
                    if (d.length != 0) {
                        return (u6.e) this.b.a.c(u6.e.class, c.c(c.a.c(d, 0), this.d.a()));
                    }
                }
            } catch (Exception unused) {
            }
        }
        return null;
    }

    public final u6.e N(File file) {
        if (file != null) {
            try {
                if (file.isFile()) {
                    String s2 = this.c.s(file);
                    if (X5.e.q(s2)) {
                        return null;
                    }
                    return (u6.e) this.b.a.c(u6.e.class, s2);
                }
            } catch (Exception unused) {
            }
        }
        return null;
    }

    public final void O(File file, byte[] bArr, byte[] bArr2, c.c cVar) {
        if (bArr != null && bArr2 != null) {
            int i2 = ByteBuffer.wrap(bArr, 4, 4).getInt();
            byte b = bArr2[bArr2.length - 1];
            byte[] bArr3 = new byte[((bArr.length + 4) + bArr2.length) - 1];
            System.arraycopy(bArr, 0, bArr3, 0, 4);
            System.arraycopy(ByteBuffer.allocate(4).putInt(1).array(), 0, bArr3, 4, 4);
            System.arraycopy(bArr, 4, bArr3, 8, i2 - 4);
            int i3 = i2 + 4;
            System.arraycopy(bArr2, 0, bArr3, i3, (bArr2.length - 1) - b);
            int length = ((bArr2.length - 1) - b) + i3;
            System.arraycopy(ByteBuffer.allocate(4).putInt(length).array(), 0, bArr3, 8, 4);
            System.arraycopy(bArr, i2, bArr3, length, bArr.length - i2);
            System.arraycopy(bArr2, (bArr2.length - 1) - b, bArr3, (bArr.length - i2) + length, b);
            e(file, c.d(bArr3, cVar));
            return;
        }
        throw new IOException();
    }

    public final void Q(String str, d6.e<byte[]> eVar, boolean z2) {
        File file;
        int i2 = eVar.d;
        Object obj = eVar.f;
        if (i2 != 0) {
            if (i2 == 1) {
                j(str, false);
                ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream((byte[]) obj);
                try {
                    Z(byteArrayInputStream, q(str));
                    byteArrayInputStream.close();
                    return;
                } catch (Throwable th) {
                    try {
                        byteArrayInputStream.close();
                    } catch (Throwable th2) {
                        th.addSuppressed(th2);
                    }
                    throw th;
                }
            }
            return;
        }
        if (obj != null) {
            byte[] bArr = (byte[]) obj;
            if (bArr.length != 0) {
                if (z2) {
                    File q2 = q(str);
                    StringBuilder l2 = p.l(str);
                    l2.append(s);
                    file = new File(q2, l2.toString());
                } else {
                    File q3 = q(str);
                    StringBuilder l3 = p.l(str);
                    l3.append(r);
                    file = new File(q3, l3.toString());
                }
                this.c.v(file.getAbsolutePath(), bArr);
            }
        }
    }

    public final void R(H h2) {
        if (h2 == null) {
            return;
        }
        try {
            this.c.v(X5.e.e(new String[]{this.a.l, c0, Q}).getAbsolutePath(), X5.e.G(this.b.a.h(h2).getBytes(), this.e));
        } catch (Exception unused) {
        }
    }

    public final void S(String str, u6.d dVar) {
        String i2 = dVar.i();
        File W2 = W(str, i2);
        if (W2 == null) {
            W2 = new File(B(str, i2));
        }
        this.c.u(W2.getAbsolutePath(), this.b.a.h(dVar));
    }

    public final void T(String str, u6.e eVar) {
        String absolutePath = p(str, l).getAbsolutePath();
        String h2 = this.b.a.h(eVar);
        c.c a = this.d.a();
        AtomicBoolean atomicBoolean = c.a;
        this.c.v(absolutePath, c.d(h2.getBytes("UTF-8"), a).a());
    }

    public final void U(u6.e eVar) {
        String absolutePath = r().getAbsolutePath();
        String h2 = this.b.a.h(eVar);
        c.c a = this.d.a();
        AtomicBoolean atomicBoolean = c.a;
        this.c.v(absolutePath, c.d(h2.getBytes("UTF-8"), a).a());
    }

    public final File V(String str, String str2) {
        File[] listFiles;
        File q2 = q(str);
        if (!q2.exists() || q2.isFile() || (listFiles = q2.listFiles()) == null || listFiles.length == 0) {
            return null;
        }
        for (File file : listFiles) {
            if (file.isFile() && file.getAbsolutePath().toLowerCase(Locale.ENGLISH).endsWith(str2)) {
                return file;
            }
        }
        return null;
    }

    public final File W(String str, String str2) {
        File[] listFiles;
        File file = new File(A(str));
        if (!file.exists() || file.isFile() || (listFiles = file.listFiles()) == null || listFiles.length == 0) {
            return null;
        }
        for (File file2 : listFiles) {
            if (file2.isFile()) {
                if (file2.getAbsolutePath().endsWith(str2 + u)) {
                    return file2;
                }
            }
        }
        return null;
    }

    public final void c(String str, String str2) {
        File[] listFiles;
        File file = new File(str);
        if (!file.isDirectory() || (listFiles = file.listFiles()) == null) {
            return;
        }
        g(str2);
        for (File file2 : listFiles) {
            if (file2.isFile()) {
                d(file2.getAbsolutePath(), X5.e.e(new String[]{str2, file2.getName()}).getAbsolutePath());
            }
        }
    }

    public final void d(String str, String str2) {
        this.c.l(str, str2);
    }

    public final void e(File file, c.a aVar) {
        String absolutePath = file.getAbsolutePath();
        byte[] bArr = aVar.a;
        int length = bArr.length;
        byte[] bArr2 = aVar.b;
        int length2 = length + bArr2.length;
        byte[] bArr3 = aVar.c;
        byte[] bArr4 = new byte[length2 + bArr3.length + 8];
        System.arraycopy(ByteBuffer.allocate(4).putInt(bArr2.length).array(), 0, bArr4, 0, 4);
        System.arraycopy(ByteBuffer.allocate(4).putInt(bArr3.length).array(), 0, bArr4, 4, 4);
        System.arraycopy(bArr2, 0, bArr4, 8, bArr2.length);
        System.arraycopy(bArr3, 0, bArr4, bArr2.length + 8, bArr3.length);
        System.arraycopy(bArr, 0, bArr4, bArr2.length + bArr3.length + 8, bArr.length);
        this.c.v(absolutePath, bArr4);
    }

    public final void f(File file, Object obj, c.c cVar) {
        if (obj == null) {
            return;
        }
        String absolutePath = file.getAbsolutePath();
        String h2 = this.b.a.h(obj);
        AtomicBoolean atomicBoolean = c.a;
        this.c.v(absolutePath, c.d(h2.getBytes("UTF-8"), cVar).a());
    }

    public final void g(String str) {
        this.c.t(str);
    }

    public final File h(String str) {
        File e = X5.e.e(new String[]{this.a.k, str, UUID.randomUUID().toString()});
        g(e.getAbsolutePath());
        return e;
    }

    public final File i(File file, File file2, e6.c cVar) {
        File file3 = new File(file, K);
        ZipOutputStream zipOutputStream = new ZipOutputStream(new FileOutputStream(file3));
        File file4 = new File(file, L);
        this.c.u(file4.getAbsolutePath(), this.b.a.h(cVar));
        a(zipOutputStream, file4, null);
        a(zipOutputStream, file2, null);
        zipOutputStream.flush();
        zipOutputStream.close();
        return file3;
    }

    public final void j(String str, boolean z2) {
        for (String str2 : I) {
            File p2 = p(str, str2);
            if (p2.isFile()) {
                p2.delete();
            }
        }
        if (z2) {
            File p3 = p(str, t);
            if (p3.isFile()) {
                p3.delete();
            }
        }
    }

    public final void k(String str) {
        b bVar = this.c;
        if (str != null && !str.isEmpty()) {
            try {
                File n2 = n(str);
                if (n2 != null && n2.isFile()) {
                    n2.delete();
                }
            } catch (Exception unused) {
            }
            try {
                bVar.c(E(str));
            } catch (Exception unused2) {
            }
            try {
                bVar.c(y(str));
            } catch (Exception unused3) {
            }
            File q2 = q(str);
            if (!q2.exists()) {
                return;
            }
            bVar.b(q2);
        }
    }

    public final void l(String str, x xVar) {
        String u2;
        try {
            int i2 = a.a[xVar.k0().ordinal()];
            if (i2 != 1) {
                if (i2 != 2) {
                    if (i2 == 3) {
                        return;
                    } else {
                        throw new UnsupportedOperationException();
                    }
                }
                u2 = B(str, xVar.D());
            } else {
                u2 = u(str, xVar.D());
            }
            File file = new File(u2);
            if (file.exists() && file.isFile()) {
                file.delete();
            }
        } catch (Exception unused) {
        }
    }

    public final void m() {
        File[] listFiles;
        try {
            Random random = new Random();
            File file = new File(w());
            if (file.isDirectory() && (listFiles = file.listFiles()) != null && listFiles.length != 0) {
                for (File file2 : listFiles) {
                    if (file2.isDirectory()) {
                        String name = file2.getName();
                        for (String str : I) {
                            File file3 = new File(file2, name + str);
                            if (file3.isFile() && !r.equals(str)) {
                                byte[] bArr = new byte[random.nextInt(16)];
                                random.nextBytes(bArr);
                                this.c.v(file3.getAbsolutePath(), bArr);
                            }
                        }
                    }
                }
            }
        } catch (Exception unused) {
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:23:0x008a A[Catch: Exception -> 0x00a4, TRY_LEAVE, TryCatch #2 {Exception -> 0x00a4, blocks: (B:3:0x0002, B:7:0x000f, B:11:0x0021, B:16:0x004d, B:19:0x0053, B:23:0x008a, B:28:0x0064, B:31:0x006b, B:38:0x00a3, B:41:0x00a0, B:9:0x0019, B:13:0x0025, B:15:0x0030, B:37:0x009b), top: B:2:0x0002, inners: #0, #3 }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public final File n(String str) {
        String str2;
        File p2;
        String s2;
        e6.b bVar;
        try {
            str2 = g;
            p2 = p(str, str2);
        } catch (Exception unused) {
        }
        if (!p2.isFile()) {
            return null;
        }
        DataInputStream dataInputStream = new DataInputStream(new FileInputStream(p2));
        try {
            byte[] bArr = new byte[4];
            if (dataInputStream.read(bArr) != 4) {
                dataInputStream.close();
                return null;
            }
            if (c.a(bArr, new byte[]{9, 19, 29, 39})) {
                File e = X5.e.e(new String[]{o(), new UUID(dataInputStream.readLong(), dataInputStream.readLong()).toString()});
                dataInputStream.close();
                return e;
            }
            dataInputStream.close();
            File V2 = V(str, str2);
            if (V2 != null) {
                try {
                    s2 = this.c.s(V2);
                } catch (Exception unused2) {
                }
                if (!X5.e.q(s2)) {
                    bVar = (e6.b) this.b.a.c(e6.b.class, c.c(c.a.b(s2), this.d.d()));
                    if (bVar != null) {
                        return X5.e.e(new String[]{o(), bVar.h()});
                    }
                    return null;
                }
            }
            bVar = null;
            if (bVar != null) {
            }
            return null;
        } finally {
        }
    }

    public final String o() {
        return X5.e.e(new String[]{this.a.k, b0}).getAbsolutePath();
    }

    public final File p(String str, String str2) {
        return new File(q(str), n.m(str, str2));
    }

    public final File q(String str) {
        return X5.e.e(new String[]{this.a.k, U, str});
    }

    public final File r() {
        return X5.e.e(new String[]{s().getAbsolutePath(), J + l});
    }

    public final File s() {
        return X5.e.e(new String[]{this.a.k, W});
    }

    public final String t(String str) {
        return X5.e.e(new String[]{this.a.k, U, str, X}).getAbsolutePath();
    }

    public final String u(String str, String str2) {
        String t2 = t(str);
        StringBuilder l2 = p.l(str2);
        l2.append(t);
        return X5.e.e(new String[]{t2, l2.toString()}).getAbsolutePath();
    }

    public final String v(String str) {
        String absolutePath = s().getAbsolutePath();
        StringBuilder l2 = p.l(str);
        l2.append(t);
        return X5.e.e(new String[]{absolutePath, l2.toString()}).getAbsolutePath();
    }

    public final String w() {
        return X5.e.e(new String[]{this.a.k, U}).getAbsolutePath();
    }

    public final File x(String str) {
        return new File(q(str), n.m(str, ".png"));
    }

    public final File y(String str) {
        File e = X5.e.e(new String[]{this.a.k, V});
        StringBuilder l2 = p.l(str);
        l2.append(p);
        return new File(e, l2.toString());
    }

    public final H z() {
        try {
            d dVar = this.b;
            return (H) dVar.a.c(H.class, new String(X5.e.G(this.c.o(X5.e.e(new String[]{this.a.l, c0, Q}).getAbsolutePath()), this.e)));
        } catch (Exception unused) {
            return null;
        }
    }
}
//
// Decompiled by Jadx - 838ms
//
package Y5;

import t6.v;

public class e$a {
    public static final int[] a;

    static {
        int[] iArr = new int[v.values().length];
        a = iArr;
        try {
            iArr[v.IMAGE.ordinal()] = 1;
        } catch (NoSuchFieldError unused) {
        }
        try {
            a[v.RECORD.ordinal()] = 2;
        } catch (NoSuchFieldError unused2) {
        }
        try {
            a[v.COLOR.ordinal()] = 3;
        } catch (NoSuchFieldError unused3) {
        }
    }
}
//
// Decompiled by Jadx - 1058ms
//
package o6;

import c3.b;
import java.util.List;

public final class H {

    @b("macros")
    private List<D> a;

    @b("activities")
    private List<a> b;

    @b("threads")
    private List<Integer> c;

    @b("macroCount")
    private int d;

    @b("newsCount")
    private int e;

    @b("threadCount")
    private int f;

    @b("topics")
    private String g;

    @b("notificationPsa")
    private G h;

    @b("updates")
    private o i;

    public H() {
    }

    public H a() {
        if (h() != null) {
            h().a();
        }
        return this;
    }

    public List<a> b() {
        return this.b;
    }

    public String c() {
        return this.g;
    }

    public o d() {
        return this.i;
    }

    public int e() {
        return this.d;
    }

    public List<D> f() {
        return this.a;
    }

    public int g() {
        return this.e;
    }

    public G h() {
        return this.h;
    }

    public int i() {
        return this.f;
    }

    public List<Integer> j() {
        return this.c;
    }

    public void k(o oVar) {
        this.i = oVar;
    }

    public H(List<D> list, List<a> list2, List<Integer> list3, int i, int i2, int i3, String str, G g, o oVar) {
        this.a = list;
        this.b = list2;
        this.c = list3;
        this.d = i;
        this.e = i2;
        this.f = i3;
        this.g = str;
        this.h = g;
        this.i = oVar;
    }
}
//
// Decompiled by Jadx - 984ms
//
package o6;

import c3.b;

public final class h {

    @b("changelogID")
    private int a;

    @b("content")
    private String b;

    public String a() {
        return this.b;
    }

    public int b() {
        return this.a;
    }

    public h c(int i) {
        this.a = i;
        this.b = "Mock Content";
        return this;
    }
}
//
// Decompiled by Jadx - 1316ms
//
package O6;

import M4.c;
import U5.b;
import X1.A;
import android.graphics.Point;
import java.util.ArrayList;
import java.util.List;
import n6.B;
import n6.C;
import n6.H;
import n6.i;

public final class h {
    public final c a;
    public final A b;
    public final D3.c c;

    public h(c cVar, A a, D3.c cVar2) {
        this.a = cVar;
        this.b = a;
        this.c = cVar2;
    }

    /* JADX WARN: Removed duplicated region for block: B:35:0x015e  */
    /* JADX WARN: Removed duplicated region for block: B:53:0x0259 A[SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public final ArrayList a(long j, List[] listArr, Point point) {
        D3.c cVar;
        ArrayList arrayList;
        c cVar2;
        int i;
        H h;
        C c;
        List list;
        int size;
        int i2;
        g gVar;
        int i3;
        int i4;
        H h2;
        h hVar = this;
        List[] listArr2 = listArr;
        b bVar = null;
        if (listArr2 == null) {
            return null;
        }
        D3.c cVar3 = hVar.c;
        cVar3.r(point);
        List list2 = listArr2[0];
        int i5 = 2;
        c cVar4 = hVar.a;
        int i6 = 1;
        if (list2 != null && list2.size() == 2) {
            List list3 = listArr2[0];
            if (list3 == null || list3.size() < 2) {
                return null;
            }
            ArrayList arrayList2 = new ArrayList(2);
            g gVar2 = (g) list3.get(0);
            g gVar3 = (g) list3.get(1);
            long j2 = gVar2.d - j;
            H b = cVar4.b(2, (q6.b) null, (b) null);
            b.h0(String.valueOf(j2));
            i b2 = cVar4.b(0, (q6.b) null, (b) null);
            b2.b(String.valueOf(1));
            b2.I(String.valueOf(gVar3.d - gVar2.d));
            b2.c(String.valueOf(0));
            b2.h0().e(gVar2.b);
            arrayList2.add(b);
            arrayList2.add(b2);
            return arrayList2;
        }
        List list4 = listArr2[0];
        if (list4 != null && list4.size() >= 2) {
            ArrayList arrayList3 = new ArrayList(2);
            long j3 = ((g) listArr2[0].get(0)).d - j;
            H b3 = cVar4.b(2, (q6.b) null, (b) null);
            b3.h0(String.valueOf(j3));
            B b4 = cVar4.b(11, (q6.b) null, (b) null);
            b4.E().clear();
            int length = listArr2.length;
            g gVar4 = null;
            int i7 = 0;
            while (i7 < length) {
                List list5 = listArr2[i7];
                if (list5 == null || list5.size() < i5) {
                    cVar = cVar3;
                    arrayList = arrayList3;
                    cVar2 = cVar4;
                    i = length;
                    h = b3;
                } else {
                    if (((g) list5.get(list5.size() - i6)).c == i5) {
                        gVar4 = (g) list5.remove(list5.size() - i6);
                    }
                    arrayList = arrayList3;
                    double d = 12.0d / (cVar3.d / 720.0d);
                    C b5 = cVar4.b(12, b4, bVar);
                    b4.K(b5);
                    hVar.b.getClass();
                    ArrayList arrayList4 = new ArrayList(list5.size());
                    if (list5.size() >= 2) {
                        if (list5.size() == 2) {
                            arrayList4.add(0);
                            arrayList4.add(1);
                        } else {
                            int size2 = list5.size() - 1;
                            arrayList4.add(0);
                            c = b5;
                            list = list5;
                            A.k(list5, 0, size2, 64.0d, arrayList4);
                            arrayList4.add(Integer.valueOf(size2));
                            size = arrayList4.size();
                            i2 = 0;
                            while (true) {
                                if (i2 >= size) {
                                    int intValue = ((Integer) arrayList4.get(i2)).intValue();
                                    g gVar5 = (g) list.get(intValue);
                                    cVar = cVar3;
                                    if (i2 == size - 1) {
                                        if (gVar4 == null) {
                                            c.h0(s6.A.a(gVar5.b, (int) (gVar5.d - ((g) list.get(intValue - 1)).d), 20));
                                        } else {
                                            c.h0(s6.A.a(gVar5.b, (int) Math.abs(gVar4.d - gVar5.d), 20));
                                        }
                                    } else {
                                        int i8 = i2 + 1;
                                        int intValue2 = ((Integer) arrayList4.get(i8)).intValue();
                                        ArrayList arrayList5 = arrayList4;
                                        g gVar6 = (g) list.get(intValue2);
                                        int i9 = intValue + 1;
                                        List list6 = list;
                                        int i10 = size;
                                        c cVar5 = cVar4;
                                        long j4 = ((g) list.get(i9)).d;
                                        if (i9 == intValue2) {
                                            Point point2 = gVar5.b;
                                            Point point3 = gVar6.b;
                                            double d2 = point3.x - point2.x;
                                            gVar = gVar4;
                                            double d3 = point3.y - point2.y;
                                            c.h0(s6.A.a(point2, 0, (int) Math.round((Math.sqrt((d3 * d3) + (d2 * d2)) * d) / (gVar6.d - gVar5.d))));
                                            i3 = i8;
                                            i4 = length;
                                            h2 = b3;
                                        } else {
                                            gVar = gVar4;
                                            Point point4 = gVar5.b;
                                            int i11 = (int) (j4 - gVar5.d);
                                            Point point5 = gVar6.b;
                                            double d4 = point5.x - point4.x;
                                            i3 = i8;
                                            i4 = length;
                                            h2 = b3;
                                            double d5 = point5.y - point4.y;
                                            c.h0(s6.A.a(point4, i11, (int) Math.round((Math.sqrt((d5 * d5) + (d4 * d4)) * d) / (gVar6.d - j4))));
                                        }
                                        arrayList4 = arrayList5;
                                        size = i10;
                                        b3 = h2;
                                        cVar3 = cVar;
                                        cVar4 = cVar5;
                                        list = list6;
                                        gVar4 = gVar;
                                        i2 = i3;
                                        length = i4;
                                    }
                                } else {
                                    cVar = cVar3;
                                    break;
                                }
                            }
                            cVar2 = cVar4;
                            i = length;
                            h = b3;
                            gVar4 = gVar4;
                        }
                    }
                    c = b5;
                    list = list5;
                    size = arrayList4.size();
                    i2 = 0;
                    while (true) {
                        if (i2 >= size) {
                        }
                        arrayList4 = arrayList5;
                        size = i10;
                        b3 = h2;
                        cVar3 = cVar;
                        cVar4 = cVar5;
                        list = list6;
                        gVar4 = gVar;
                        i2 = i3;
                        length = i4;
                    }
                    cVar2 = cVar4;
                    i = length;
                    h = b3;
                    gVar4 = gVar4;
                }
                i7++;
                hVar = this;
                listArr2 = listArr;
                b3 = h;
                cVar3 = cVar;
                cVar4 = cVar2;
                arrayList3 = arrayList;
                length = i;
                bVar = null;
                i5 = 2;
                i6 = 1;
            }
            ArrayList arrayList6 = arrayList3;
            H h3 = b3;
            if (b4.E().size() > 0) {
                arrayList6.add(h3);
                arrayList6.add(b4);
                return arrayList6;
            }
        }
        return null;
    }
}
//
// Decompiled by Jadx - 1313ms
//
package Q4;

import D7.b;
import E0.n;
import E0.o;
import E5.j;
import I7.d;
import J5.f;
import K3.C;
import L6.c0;
import N5.v;
import O3.w;
import O4.h;
import P7.a;
import Q4.a;
import X5.e;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.graphics.Point;
import android.graphics.Rect;
import android.media.Image;
import android.os.Build;
import android.text.TextUtils;
import android.util.SparseArray;
import h7.A;
import h7.m;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Stack;
import java.util.TimeZone;
import java.util.concurrent.Callable;
import java.util.regex.Pattern;
import l6.D;
import l6.E;
import n6.F;
import n6.k;
import n6.q;
import n6.s;
import n6.t;
import n6.x;
import q6.i;
import q6.l;
import s6.r;
import t6.B;
import t6.g;
import t6.p;
import t6.z;

public final class c {
    public static b A(Callable callable, z7.b bVar, z7.b bVar2) {
        d dVar = new d(new I7.c(callable).r0(a.b), w7.a.a());
        b bVar3 = new b(bVar, bVar2);
        dVar.o0(bVar3);
        return bVar3;
    }

    public static void B(w wVar) {
        Image g;
        try {
            if (wVar.e() && (g = wVar.a().g()) != null) {
                g.close();
            }
        } catch (Exception unused) {
        }
    }

    public static ArrayList C(String str, ArrayList arrayList) {
        if (e.q(str)) {
            return new ArrayList();
        }
        String lowerCase = str.trim().toLowerCase(Locale.ROOT);
        ArrayList arrayList2 = new ArrayList();
        Iterator it = arrayList.iterator();
        while (it.hasNext()) {
            h hVar = (h) it.next();
            if (hVar != null) {
                Object x = hVar.x();
                if (x instanceof x) {
                    x xVar = (x) x;
                    if (!e.q(xVar.D()) && xVar.D().toLowerCase(Locale.ROOT).contains(lowerCase)) {
                        arrayList2.add(hVar);
                    }
                }
            }
        }
        return arrayList2;
    }

    public static String D(Date date) {
        if (date == null) {
            return null;
        }
        DateFormat dateInstance = DateFormat.getDateInstance(3);
        dateInstance.setTimeZone(TimeZone.getDefault());
        return dateInstance.format(date);
    }

    public static String E(q4.a aVar, String str, String str2, String str3) {
        if (e.q(str2) && e.q(str3)) {
            return null;
        }
        if (e.q(str2)) {
            str2 = "0";
        }
        if (e.q(str3)) {
            str3 = "0";
        }
        return str + '.' + aVar.a(166) + "()." + aVar.a(239) + "(" + str2 + ", " + str3 + ")";
    }

    public static String F(q4.a aVar, String str, String str2, String str3, String str4, String str5) {
        boolean q = e.q(str2);
        boolean q2 = e.q(str3);
        boolean q3 = e.q(str4);
        boolean q4 = e.q(str5);
        if (q && q2 && q3 && q4) {
            return null;
        }
        if (q) {
            str2 = "0";
        }
        if (q2) {
            str3 = "0";
        }
        StringBuilder sb = new StringBuilder();
        sb.append(str);
        sb.append('.');
        sb.append(aVar.a(165));
        sb.append("().");
        sb.append(aVar.a(239));
        sb.append("(");
        sb.append(str2);
        sb.append(", ");
        sb.append(str3);
        if (!q3 || !q4) {
            if (q3) {
                str4 = "null";
            }
            if (q4) {
                str5 = "null";
            }
            sb.append(", ");
            sb.append(str4);
            sb.append(", ");
            sb.append(str5);
        }
        sb.append(")");
        return sb.toString();
    }

    public static double G(z5.a aVar, d6.b bVar) {
        U5.b R1;
        if (aVar != null && (R1 = aVar.R1()) != null && aVar.G0() != null && bVar != null) {
            Point m = bVar.m();
            if (m.x > 0) {
                int n = R1.n();
                int o = R1.o();
                int i = m.x;
                return Q(n, o, i, m.y, R1.h()) / i;
            }
            return 1.0d;
        }
        return 1.0d;
    }

    public static String H(k kVar, d6.b bVar, J5.c cVar, f fVar) {
        if (kVar == null) {
            return null;
        }
        if (kVar.n0()) {
            return bVar.o.getString(0x7f130221);
        }
        if (kVar.m0()) {
            return "if " + kVar.i0();
        }
        return bVar.o.getString(0x7f13059b) + " " + kVar.g0(cVar, fVar);
    }

    public static double I(int i, int i2, int i3, int i4) {
        boolean z;
        if (i != 0 && i2 != 0 && i3 != 0 && i4 != 0) {
            int min = Math.min(i, i2);
            double max = Math.max(i, i2);
            double d = min;
            double d2 = max / d;
            double d3 = i4;
            double d4 = i3;
            double d5 = d3 / d4;
            if (d2 > 1.7677777777777777d && d5 > 1.7677777777777777d) {
                return d4 / d;
            }
            if (d2 < 1.7677777777777777d) {
                z = true;
            } else {
                z = false;
            }
            if (z) {
                d = (max * 9.0d) / 16.0d;
            }
            if (d5 < 1.7677777777777777d) {
                d4 = (d3 * 9.0d) / 16.0d;
            }
            return d4 / d;
        }
        return 1.0d;
    }

    public static String J(g gVar, i iVar) {
        if (gVar == null || iVar == null) {
            return "";
        }
        switch (a.a[gVar.ordinal()]) {
            case 1:
                return iVar.a(0x7f13027a);
            case 2:
                return iVar.a(0x7f13027f);
            case 3:
                return iVar.a(0x7f13027b);
            case 4:
                return iVar.a(0x7f13027d);
            case 5:
                return iVar.a(0x7f13027c);
            case 6:
                return iVar.a(0x7f13027e);
            case 7:
                return iVar.a(0x7f130278);
            case 8:
                return iVar.a(0x7f130280);
            case 9:
                return iVar.a(0x7f130279);
            case 10:
                return iVar.a(0x7f1305f3);
            default:
                return "";
        }
    }

    public static String K(q4.a aVar, int i) {
        Object valueOf;
        switch (i) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
                valueOf = Integer.valueOf(i);
                break;
            case 8:
                valueOf = aVar.a(339);
                break;
            case 9:
                valueOf = aVar.a(350);
                break;
            case 10:
                valueOf = aVar.a(341);
                break;
            case 11:
                valueOf = aVar.a(342);
                break;
            case 12:
                valueOf = aVar.a(188);
                break;
            case 13:
                valueOf = aVar.a(344);
                break;
            case 14:
                valueOf = aVar.a(343);
                break;
            case 15:
                valueOf = aVar.a(198);
                break;
            case 16:
                valueOf = aVar.a(15);
                break;
            case 17:
                valueOf = aVar.a(16);
                break;
            default:
                valueOf = "";
                break;
        }
        return String.valueOf(valueOf);
    }

    public static Rect L(q qVar, D3.a aVar, int i) {
        Point m;
        if (qVar == null) {
            return null;
        }
        if (qVar.H0()) {
            if (qVar.R() != t6.b.NORMAL) {
                return null;
            }
            return n(qVar, aVar);
        }
        if (!qVar.G0() || qVar.r0().R() != t6.b.NORMAL || (m = m(qVar.r0(), aVar)) == null) {
            return null;
        }
        Point s = aVar.s();
        Rect rect = new Rect();
        Q8.d w = w(m, i, (-i) / 2, Integer.MAX_VALUE, Integer.MAX_VALUE);
        int i2 = i / 2;
        w.a = Math.min(w.a, s.x - i2);
        w.b = Math.min(w.b, s.y - i2);
        V(rect, w);
        return rect;
    }

    public static List<Integer> M() {
        return Arrays.asList(10, 22, 20, 18, 12);
    }

    public static String N(List<? extends j6.c> list, j6.c cVar, String str) {
        HashSet t = t(list, cVar);
        if (t == null) {
            return null;
        }
        return O(str, t);
    }

    public static String O(String str, HashSet hashSet) {
        if (!hashSet.contains(str)) {
            hashSet.add(str);
            return str;
        }
        int i = 0;
        do {
            String str2 = str + " (" + i + ")";
            if (!hashSet.contains(str2)) {
                hashSet.add(str2);
                return str2;
            }
            i++;
        } while (i < Integer.MAX_VALUE);
        throw new RuntimeException();
    }

    public static Object P(SparseArray sparseArray, int i) {
        Object obj = sparseArray.get(i);
        if (obj == null) {
            return null;
        }
        return obj;
    }

    public static double Q(int i, int i2, int i3, int i4, double d) {
        if (i != 0 && i2 != 0 && i3 != 0 && i4 != 0) {
            double min = Math.min(i, i2);
            double d2 = i3;
            double d3 = i4 / d2;
            if (Math.max(i, i2) / min > 1.7677777777777777d && d3 > 1.7677777777777777d) {
                return d;
            }
            return ((d / min) * d2) / I(i, i2, i3, i4);
        }
        return d;
    }

    public static String R(x xVar, boolean z) {
        if (xVar == null) {
            return null;
        }
        int val = xVar.k0().getVal();
        if (val == 2) {
            if (e.q(xVar.S())) {
                return xVar.D();
            }
            return xVar.D() + " - " + xVar.S();
        }
        if (val == 0 && z) {
            if (e.q(xVar.S())) {
                return xVar.D();
            }
            return xVar.S();
        }
        return xVar.D();
    }

    public static String S(r6.f fVar) {
        boolean z;
        String g0;
        if (fVar == null) {
            return null;
        }
        if (fVar.j0() == B.TABLAYOUT) {
            return fVar.S();
        }
        String str = "";
        if (fVar.j0() == B.GROUP) {
            List E = ((r6.d) fVar).E();
            ArrayList arrayList = new ArrayList();
            int i = 0;
            while (true) {
                if (i < E.size()) {
                    if (!r6.f.class.isInstance((n6.g) E.get(i))) {
                        i++;
                    } else {
                        z = true;
                    }
                } else {
                    z = false;
                }
                if (!z) {
                    break;
                }
                r6.f fVar2 = (n6.g) E.get(i);
                i++;
                r6.f fVar3 = fVar2;
                if (fVar3.j0() != B.TEXTVIEW && fVar3.j0() != B.TABLAYOUT && fVar3.j0() != B.GROUP) {
                    if (fVar3.g0() == null) {
                        g0 = "";
                    } else {
                        g0 = fVar3.g0();
                    }
                    arrayList.add(g0);
                }
            }
            String join = TextUtils.join(", ", arrayList);
            StringBuilder sb = new StringBuilder();
            sb.append(fVar.S());
            if (!e.q(join)) {
                str = o.h(" (", join, ")");
            }
            sb.append(str);
            return sb.toString();
        }
        if (fVar.j0() == B.TEXTVIEW) {
            String p0 = ((r6.k) fVar).p0();
            if (p0 != null) {
                str = p0;
            }
            if (str.length() > 10) {
                str = str.substring(0, 10) + "...";
            }
        } else {
            str = fVar.g0();
        }
        Locale locale = Locale.US;
        return n.n(fVar.S(), " (", str, ")");
    }

    public static boolean T() {
        if (Build.VERSION.SDK_INT > 33) {
            return true;
        }
        return false;
    }

    public static D7.a U(C c, String str, ArrayList arrayList) {
        if (arrayList != null && arrayList.size() != 0 && !e.q(str)) {
            return u(new v(c, str, arrayList), new j(6, arrayList), new A2.a(7));
        }
        return null;
    }

    public static void V(Rect rect, Q8.d dVar) {
        int i = dVar.a;
        rect.left = i;
        int i2 = dVar.b;
        rect.top = i2;
        rect.right = i + dVar.c;
        rect.bottom = i2 + dVar.d;
    }

    public static double W(String str, String str2) {
        int i;
        if (str != null && str2 != null) {
            int length = str.length();
            int length2 = str2.length();
            if (length == 0) {
                return length2;
            }
            if (length2 == 0) {
                return length;
            }
            if (length > length2) {
                length2 = str.length();
                length = length2;
            } else {
                str2 = str;
                str = str2;
            }
            int[] iArr = new int[length + 1];
            for (int i2 = 0; i2 <= length; i2++) {
                iArr[i2] = i2;
            }
            for (int i3 = 1; i3 <= length2; i3++) {
                int i4 = iArr[0];
                char charAt = str.charAt(i3 - 1);
                iArr[0] = i3;
                int i5 = 1;
                while (i5 <= length) {
                    int i6 = iArr[i5];
                    int i7 = i5 - 1;
                    if (str2.charAt(i7) == charAt) {
                        i = 0;
                    } else {
                        i = 1;
                    }
                    iArr[i5] = Math.min(Math.min(iArr[i7] + 1, iArr[i5] + 1), i4 + i);
                    i5++;
                    i4 = i6;
                }
            }
            double max = Math.max(length, length2);
            return (max - iArr[length]) / max;
        }
        throw new IllegalArgumentException();
    }

    public static void X(A a, r4.f fVar) {
        Z3.a f = a.f();
        Point m = f.w.m();
        String str = fVar.a;
        m mVar = ((h7.B) a).s;
        mVar.b = str;
        Y5.e eVar = f.A;
        mVar.a = eVar.t(str);
        eVar.q(fVar.a).getAbsolutePath();
        Point point = new Point(fVar.b, fVar.c);
        D3.c cVar = f.s;
        cVar.q(point, m);
        mVar.h = cVar.l();
        int i = fVar.b;
        mVar.e = i;
        int i2 = fVar.c;
        mVar.f = i2;
        int i3 = m.x;
        mVar.c = i3;
        int i4 = m.y;
        mVar.d = i4;
        mVar.g = Q(i, i2, i3, i4, fVar.d);
        mVar.i = 1.0d;
        mVar.j = 1.0d;
        mVar.k = 3;
        mVar.l = fVar.g;
        mVar.m = fVar.h;
        mVar.n = false;
        mVar.p = fVar.i;
        mVar.q = fVar.e;
        mVar.r = fVar.f;
    }

    public static void Y(c0 c0Var, f fVar) {
        Point point = null;
        if (fVar != null) {
            point = (Point) fVar.c(104, Point.class, (Object) null);
            fVar.f(117, 0);
        }
        if (point != null) {
            c0Var.getClass();
        }
    }

    public static byte[] Z(byte[] bArr, byte[] bArr2) {
        byte[] bArr3 = new byte[bArr.length];
        for (int i = 0; i < bArr.length; i++) {
            bArr3[i] = (byte) (bArr[i] ^ bArr2[i % bArr2.length]);
        }
        return bArr3;
    }

    public static a a(n6.g gVar) {
        boolean z;
        n6.g gVar2;
        boolean z2;
        boolean z3;
        if (gVar == null) {
            return a.a();
        }
        LinkedHashMap linkedHashMap = new LinkedHashMap();
        LinkedHashMap linkedHashMap2 = new LinkedHashMap();
        n6.g gVar3 = null;
        n6.g gVar4 = gVar;
        String str = null;
        t tVar = null;
        boolean z4 = false;
        boolean z5 = false;
        int i = 0;
        while (true) {
            if (gVar4 != null) {
                z = true;
            } else {
                z = false;
            }
            if (z) {
                if (gVar4 != null) {
                    q6.b W = gVar4.W();
                    if (W instanceof n6.g) {
                        gVar2 = (n6.g) W;
                    } else {
                        gVar2 = gVar3;
                    }
                } else {
                    gVar2 = gVar4;
                }
                if (gVar4 != null) {
                    if (gVar4.T() == 5) {
                        z4 = true;
                    } else if (gVar4.T() == 30) {
                        tVar = (t) gVar4;
                    } else if (gVar4.T() == 7) {
                        n6.n nVar = (n6.n) gVar4;
                        str = nVar.A();
                        i = nVar.h0().size();
                        z5 = true;
                    } else if (gVar4.T() == 18) {
                        q h0 = ((n6.e) gVar4).h0();
                        if (h0 != null) {
                            if (h0.h0() != p.NONE) {
                                z4 = true;
                            }
                            String G = h0.G();
                            if (h0.i() == gVar4) {
                                z3 = true;
                            } else {
                                z3 = false;
                            }
                            linkedHashMap.put(G, new a.a(h0, z3, gVar3));
                        }
                    } else if (gVar4.T() == 29) {
                        s h02 = ((n6.f) gVar4).h0();
                        if (h02 != null) {
                            if (h02.h0() != p.NONE) {
                                z4 = true;
                            }
                            G3.a aVar = new G3.a(Collections.singletonList(h02.o()));
                            HashSet hashSet = aVar.i;
                            hashSet.add(28);
                            hashSet.add(18);
                            while (aVar.hasNext()) {
                                q qVar = (n6.g) aVar.next();
                                if (qVar != null) {
                                    if (qVar.T() == 13) {
                                        q qVar2 = qVar;
                                        String G2 = qVar2.G();
                                        if (h02.i() == gVar4) {
                                            z2 = true;
                                        } else {
                                            z2 = false;
                                        }
                                        linkedHashMap.put(G2, new a.a(qVar2, z2, h02.V()));
                                    }
                                }
                            }
                            linkedHashMap2.put(h02.V(), h02);
                        }
                    }
                    gVar4 = gVar2;
                    gVar3 = null;
                }
                gVar4 = gVar2;
            } else {
                return new a(z4, z5, str, i, linkedHashMap, linkedHashMap2, tVar);
            }
        }
    }

    public static void b(Map<String, ? super h6.a> map, List<? extends h6.a> list) {
        if (list == null) {
            return;
        }
        for (h6.a aVar : list) {
            if (aVar != null) {
                map.put(aVar.r(), aVar);
            }
        }
    }

    public static void c(Map<String, x> map, u6.e eVar) {
        if (eVar == null) {
            return;
        }
        map.clear();
        for (n6.g gVar : eVar.c()) {
            if (gVar != null && gVar.T() == 14) {
                x xVar = (x) gVar;
                map.put(xVar.A(), xVar);
            }
        }
    }

    public static int d(int i, int i2, int i3, int i4, int i5, int i6) {
        int i7;
        int min = Math.min(Math.min(i, i2), i3);
        int min2 = Math.min(Math.min(i4, i5), i6);
        if (min == i) {
            i7 = 1;
        } else if (min == i2) {
            i7 = 5;
        } else {
            i7 = 4;
        }
        if (min2 == i4) {
            return i7 | 2;
        }
        if (min2 == i5) {
            return i7 | 10;
        }
        return i7 | 8;
    }

    public static int e(Point point, int i, int i2) {
        int i3 = point.x;
        int abs = Math.abs((i / 2) - i3);
        int abs2 = Math.abs(i - point.x);
        int i4 = point.y;
        return d(i3, abs, abs2, i4, Math.abs((i2 / 2) - i4), Math.abs(i2 - point.y));
    }

    public static Rect f(Rect[] rectArr) {
        int i = 9999;
        int i2 = 9999;
        int i3 = 0;
        int i4 = 0;
        int i5 = 0;
        for (Rect rect : rectArr) {
            if (rect == null) {
                break;
            }
            i3++;
            i = Math.min(rect.left, i);
            i2 = Math.min(rect.top, i2);
            i4 = Math.max(rect.right, i4);
            i5 = Math.max(rect.bottom, i5);
        }
        if (i3 > 0) {
            return new Rect(i, i2, i4, i5);
        }
        return null;
    }

    public static ArrayList g(Collection collection, d6.b bVar, z5.c cVar, boolean z) {
        ArrayList arrayList = new ArrayList();
        if (collection != null && cVar.R1() != null) {
            Iterator it = collection.iterator();
            while (it.hasNext()) {
                a.a aVar = (a.a) it.next();
                if (aVar.a() && (!z || !e.q(aVar.c))) {
                    i v = v(aVar.a, bVar, cVar, null);
                    if (v != null) {
                        arrayList.add(v);
                    }
                }
            }
        }
        return arrayList;
    }

    public static ArrayList h(List list) {
        ArrayList arrayList = new ArrayList();
        Iterator it = list.iterator();
        while (it.hasNext()) {
            n6.n nVar = (n6.g) it.next();
            if (nVar != null && nVar.T() == 7) {
                n6.n nVar2 = nVar;
                arrayList.add(new l(nVar2.A(), nVar2.j0()));
            }
        }
        return arrayList;
    }

    public static ArrayList i(List list) {
        int indexOf;
        ArrayList arrayList = new ArrayList();
        Iterator it = list.iterator();
        while (it.hasNext()) {
            s6.q qVar = (s6.q) it.next();
            if (qVar != null) {
                String a = qVar.a();
                Pattern pattern = e.a;
                if (a != null && (indexOf = a.indexOf(61)) != -1) {
                    a = a.substring(indexOf).trim();
                }
                if (!e.q(a)) {
                    arrayList.add(new l(a, a));
                }
            }
        }
        return arrayList;
    }

    public static ArrayList j(z5.a aVar, d6.h hVar) {
        ArrayList arrayList = new ArrayList();
        u6.f w = aVar.w();
        if (w == null) {
            return arrayList;
        }
        Stack stack = new Stack();
        e.a(stack, w.c());
        while (stack.size() > 0) {
            r6.d dVar = (n6.g) stack.pop();
            if (dVar != null && dVar.T() == 15) {
                r6.d dVar2 = (r6.f) dVar;
                if (hVar.b(dVar2)) {
                    arrayList.add(new l(dVar2.A(), S(dVar2)));
                } else if (dVar2.j0() == B.GROUP) {
                    e.a(stack, dVar2.E());
                }
            }
        }
        return arrayList;
    }

    public static ArrayList k(z5.a aVar) {
        ArrayList arrayList = new ArrayList();
        u6.g Y1 = aVar.Y1();
        if (Y1 != null) {
            for (F f : Y1.c()) {
                if (f != null && f.T() == 9) {
                    F f2 = f;
                    arrayList.add(new l(f2.A(), f2.j0()));
                }
            }
        }
        return arrayList;
    }

    public static Point l(E e, D3.a aVar) {
        Point h = e.h();
        if (h == null) {
            return null;
        }
        int e2 = e.b().e();
        if (e2 != 0 && e2 != 1) {
            if (e2 == 2) {
                aVar.a(e.b().c(), h);
            }
        } else {
            aVar.m(h);
        }
        aVar.d(h);
        return h;
    }

    public static Point m(q6.j jVar, D3.a aVar) {
        Point j = X5.d.j(jVar.r());
        if (j == null) {
            return null;
        }
        int i = a.b[jVar.N().ordinal()];
        if (i != 1 && i != 2) {
            if (i == 3) {
                aVar.a(jVar.l(), j);
            }
        } else {
            aVar.m(j);
        }
        aVar.d(j);
        return j;
    }

    public static Rect n(q6.j jVar, D3.a aVar) {
        Rect l = e.l(jVar.r());
        if (l == null) {
            return null;
        }
        int i = a.b[jVar.N().ordinal()];
        if (i != 1) {
            if (i != 2) {
                if (i == 3) {
                    aVar.g(jVar.l(), l);
                }
            } else {
                aVar.k(l);
            }
        } else {
            aVar.f(l);
        }
        aVar.n(l);
        return l;
    }

    public static Point o(s6.m mVar, D d, D3.a aVar) {
        if (d == null || mVar == null || aVar == null) {
            return null;
        }
        Point point = new Point();
        Point point2 = new Point();
        if (!mVar.d(point, point2)) {
            return null;
        }
        aVar.i(point, point2);
        int e = d.e();
        if (e != 0 && e != 1) {
            if (e == 2) {
                if (!aVar.l(d.c()).contains(point.x, point.y)) {
                    d.i(e(point, point2.x, point2.y));
                }
                aVar.q(d.c(), point);
            }
        } else {
            aVar.b(point);
        }
        return point;
    }

    public static void p(q6.j jVar, Point point, D3.a aVar) {
        if (jVar != null && point != null && aVar != null) {
            Point point2 = new Point(point);
            aVar.j(point2);
            int i = a.b[jVar.N().ordinal()];
            if (i != 1 && i != 2) {
                if (i == 3) {
                    aVar.q(jVar.l(), point2);
                }
            } else {
                aVar.b(point2);
            }
            jVar.s(X5.d.k(point2));
        }
    }

    public static Rect q(s6.m mVar, D d, D3.a aVar) {
        if (d == null || mVar == null || aVar == null) {
            return null;
        }
        Rect rect = new Rect();
        Point point = new Point();
        if (!mVar.f(rect, point)) {
            return null;
        }
        aVar.r(rect, point);
        int e = d.e();
        if (e != 0) {
            if (e != 1) {
                if (e == 2) {
                    if (!aVar.l(d.c()).contains(rect)) {
                        int i = rect.left;
                        int i2 = rect.top;
                        int width = rect.width();
                        int height = rect.height();
                        int i3 = point.x;
                        int i4 = point.y;
                        d.i(d(i, Math.abs(((i3 / 2) - i) - (width / 2)), Math.abs((i3 - i) - width), i2, Math.abs(((i4 / 2) - i2) - (height / 2)), Math.abs((i4 - i2) - height)));
                    }
                    aVar.t(d.c(), rect);
                }
            } else {
                aVar.o(rect);
            }
        } else {
            aVar.p(rect);
        }
        return rect;
    }

    public static void r(q6.j jVar, Rect rect, D3.a aVar) {
        if (jVar != null && rect != null && aVar != null) {
            aVar.h(rect);
            int i = a.b[jVar.N().ordinal()];
            if (i != 1) {
                if (i != 2) {
                    if (i == 3) {
                        aVar.t(jVar.l(), rect);
                    }
                } else {
                    aVar.o(rect);
                }
            } else {
                aVar.p(rect);
            }
            jVar.s(e.n(rect));
        }
    }

    public static void s(Context context, CharSequence charSequence) {
        ClipboardManager clipboardManager;
        if (context == null || (clipboardManager = (ClipboardManager) context.getSystemService("clipboard")) == null) {
            return;
        }
        clipboardManager.setPrimaryClip(ClipData.newPlainText("Macrorify", charSequence));
    }

    public static HashSet t(List list, j6.c cVar) {
        if (list != null && cVar != null) {
            HashSet hashSet = new HashSet();
            Iterator it = list.iterator();
            while (it.hasNext()) {
                j6.c cVar2 = (j6.c) it.next();
                if (cVar2 != null && cVar2 != cVar) {
                    hashSet.add(cVar2.i());
                }
            }
            return hashSet;
        }
        return null;
    }

    public static D7.a u(z7.a aVar, z7.a aVar2, z7.b bVar) {
        E7.b bVar2 = new E7.b(new E7.a(aVar).c(P7.a.b), w7.a.a());
        D7.a aVar3 = new D7.a(bVar, aVar2);
        bVar2.a(aVar3);
        return aVar3;
    }

    /* JADX WARN: Removed duplicated region for block: B:12:0x0094 A[RETURN] */
    /* JADX WARN: Removed duplicated region for block: B:14:0x0095  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static i v(q qVar, d6.b bVar, z5.c cVar, C c) {
        String z0;
        String str;
        Bitmap k;
        String str2;
        String str3;
        String x0;
        x k0;
        String G = qVar.G();
        if (!qVar.B0() && qVar.y0() != z.TEXT) {
            if ((qVar.y0() == z.IMAGE || qVar.y0() == z.COLOR) && (x0 = qVar.x0()) != null && (k0 = cVar.k0(x0)) != null) {
                str = k0.D();
                if (k0.k0() == t6.v.COLOR) {
                    k = y(k0);
                } else if (k0.k0() == t6.v.IMAGE) {
                    str3 = k0.D();
                    String j0 = k0.j0();
                    if (c != null && cVar.R1() != null) {
                        Bitmap f = c.f(cVar.R1().p(), str3, j0);
                        str2 = j0;
                        k = f;
                    } else {
                        str2 = j0;
                        k = null;
                    }
                } else {
                    k = null;
                    str2 = null;
                    str3 = str2;
                }
            } else {
                k = null;
                str2 = null;
                str = null;
                str3 = null;
            }
            if (!e.q(str)) {
                return null;
            }
            StringBuilder sb = new StringBuilder();
            sb.append(qVar.S());
            sb.append(" (" + str + ")");
            i iVar = new i(G, sb.toString(), k);
            iVar.t(0, str3);
            iVar.t(1, str2);
            return iVar;
        }
        if (qVar.B0()) {
            z0 = qVar.l0();
        } else {
            z0 = qVar.z0();
        }
        str = z0;
        k = bVar.k(3);
        str2 = null;
        str3 = str2;
        if (!e.q(str)) {
        }
    }

    public static Q8.d w(Point point, int i, int i2, int i3, int i4) {
        int i5 = i / 2;
        int min = Math.min(Math.max(point.x - i5, i2), i3);
        int min2 = Math.min(Math.max(point.y - i5, i2), i4);
        return new Q8.d(min, min2, Math.min(min + i, i3) - min, Math.min(i + min2, i4) - min2);
    }

    public static void x(List list, a aVar, HashSet hashSet) {
        a.a aVar2;
        n6.g gVar;
        Collection<a.a> values = aVar.e.values();
        if (values.size() > 0) {
            Iterator it = values.iterator();
            while (true) {
                if (it.hasNext()) {
                    aVar2 = (a.a) it.next();
                    if (aVar2 != null) {
                        break;
                    }
                } else {
                    aVar2 = null;
                    break;
                }
            }
            G3.a aVar3 = new G3.a(list);
            aVar3.i.add(18);
            boolean z = false;
            while (aVar3.hasNext()) {
                l lVar = (n6.g) aVar3.next();
                if (lVar != null) {
                    if (aVar2 != null && !z && lVar.Z()) {
                        hashSet.add(aVar2.a.G());
                        z = true;
                    }
                    if (lVar instanceof l) {
                        Iterator it2 = lVar.m().iterator();
                        while (it2.hasNext()) {
                            hashSet.add(((r) it2.next()).a());
                        }
                    }
                    if (lVar.T() == 13) {
                        q qVar = (q) lVar;
                        G3.a aVar4 = new G3.a(qVar.i().E());
                        while (aVar4.hasNext()) {
                            l lVar2 = (n6.g) aVar4.next();
                            if (lVar2 != null && (lVar2 instanceof l)) {
                                Iterator it3 = lVar2.m().iterator();
                                while (it3.hasNext()) {
                                    hashSet.add(((r) it3.next()).a());
                                }
                            }
                        }
                        G3.a aVar5 = new G3.a(qVar.k().E());
                        while (aVar5.hasNext()) {
                            l lVar3 = (n6.g) aVar5.next();
                            if (lVar3 != null && (lVar3 instanceof l)) {
                                Iterator it4 = lVar3.m().iterator();
                                while (it4.hasNext()) {
                                    hashSet.add(((r) it4.next()).a());
                                }
                            }
                        }
                    }
                }
            }
            for (a.a aVar6 : values) {
                if (hashSet.contains(aVar6.a.G())) {
                    n6.g gVar2 = aVar6.a;
                    for (r rVar : gVar2.m()) {
                        if (((a.a) aVar.e.get(rVar.a())) != null) {
                            hashSet.add(rVar.a());
                        }
                    }
                    if (gVar2.Z()) {
                        while (true) {
                            if (gVar2 == null) {
                                break;
                            }
                            if (gVar2 != null) {
                                n6.g W = gVar2.W();
                                if (W instanceof n6.g) {
                                    gVar = W;
                                } else {
                                    gVar = null;
                                }
                            } else {
                                gVar = gVar2;
                            }
                            if (gVar2 == null || gVar2.T() != 18) {
                                gVar2 = gVar;
                            } else {
                                q h0 = ((n6.e) gVar2).h0();
                                if (h0 != null) {
                                    hashSet.add(h0.G());
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public static Bitmap y(x xVar) {
        int i;
        if (xVar != null && xVar.k0() == t6.v.COLOR) {
            String D = xVar.D();
            Pattern pattern = e.a;
            try {
                i = Color.parseColor(D);
            } catch (Exception unused) {
                i = 0;
            }
            return Bitmap.createBitmap(new int[]{i}, 1, 1, Bitmap.Config.ARGB_8888);
        }
        return null;
    }

    public static void z(u6.e eVar, HashSet hashSet, HashSet hashSet2, boolean z) {
        for (x xVar : eVar.c()) {
            if (xVar != null) {
                x xVar2 = xVar;
                String D = xVar2.D();
                if (z && D != null) {
                    D = D.toLowerCase(Locale.ROOT);
                }
                if (hashSet != null && (xVar2.k0() == t6.v.IMAGE || xVar2.k0() == t6.v.COLOR)) {
                    hashSet.add(D);
                } else if (hashSet2 != null && xVar2.k0() == t6.v.RECORD) {
                    hashSet2.add(D);
                }
            }
        }
    }
}
//
// Decompiled by Jadx - 859ms
//
package Q4;

import t6.g;
import t6.k;

public class c$a {
    public static final int[] a;
    public static final int[] b;

    static {
        int[] iArr = new int[k.values().length];
        b = iArr;
        try {
            iArr[k.FIXED.ordinal()] = 1;
        } catch (NoSuchFieldError unused) {
        }
        try {
            b[k.DYNAMIC.ordinal()] = 2;
        } catch (NoSuchFieldError unused2) {
        }
        try {
            b[k.STICKY.ordinal()] = 3;
        } catch (NoSuchFieldError unused3) {
        }
        int[] iArr2 = new int[g.values().length];
        a = iArr2;
        try {
            iArr2[g.EQUAL.ordinal()] = 1;
        } catch (NoSuchFieldError unused4) {
        }
        try {
            a[g.NOTEQUAL.ordinal()] = 2;
        } catch (NoSuchFieldError unused5) {
        }
        try {
            a[g.GREATER.ordinal()] = 3;
        } catch (NoSuchFieldError unused6) {
        }
        try {
            a[g.LESS.ordinal()] = 4;
        } catch (NoSuchFieldError unused7) {
        }
        try {
            a[g.GREATEREQUAL.ordinal()] = 5;
        } catch (NoSuchFieldError unused8) {
        }
        try {
            a[g.LESSEQUAL.ordinal()] = 6;
        } catch (NoSuchFieldError unused9) {
        }
        try {
            a[g.CONTAINS.ordinal()] = 7;
        } catch (NoSuchFieldError unused10) {
        }
        try {
            a[g.STARTWITHS.ordinal()] = 8;
        } catch (NoSuchFieldError unused11) {
        }
        try {
            a[g.ENDWITHS.ordinal()] = 9;
        } catch (NoSuchFieldError unused12) {
        }
        try {
            a[g.REGEX.ordinal()] = 10;
        } catch (NoSuchFieldError unused13) {
        }
    }
}
//
// Decompiled by Jadx - 2039ms
//
package q4;

import C3.a;
import Z6.d;

public final class c {
    public final d a;

    public c(d dVar) {
        this.a = dVar;
    }

    public final Object a() {
        byte[] bArr = (byte[]) this.a.h();
        a aVar = new a(183);
        aVar.a(new byte[]{bArr[58], bArr[37], bArr[45]});
        aVar.a(new byte[]{bArr[47], bArr[37], bArr[45]});
        aVar.a(new byte[]{bArr[8], bArr[37], bArr[64], bArr[45]});
        aVar.a(new byte[]{bArr[73]});
        byte b = bArr[49];
        byte b2 = bArr[43];
        aVar.a(new byte[]{b, b2, b2});
        aVar.a(new byte[]{bArr[27]});
        aVar.a(new byte[]{bArr[49]});
        aVar.a(new byte[]{bArr[42]});
        aVar.a(new byte[]{bArr[13]});
        byte b3 = bArr[68];
        aVar.a(new byte[]{b3, bArr[41], bArr[38], b3, bArr[66]});
        aVar.a(new byte[]{bArr[20], bArr[38], bArr[64], bArr[37], bArr[41]});
        aVar.a(new byte[]{bArr[38], bArr[47]});
        aVar.a(new byte[]{bArr[59], bArr[49], bArr[38], bArr[45]});
        aVar.a(new byte[]{bArr[8]});
        aVar.a(new byte[]{bArr[68]});
        aVar.a(new byte[]{bArr[43]});
        aVar.a(new byte[]{bArr[37]});
        aVar.a(new byte[]{bArr[52]});
        aVar.a(new byte[]{bArr[39], bArr[51], bArr[53], bArr[37]});
        aVar.a(new byte[]{bArr[52], bArr[38], bArr[48], bArr[43]});
        aVar.a(new byte[]{bArr[31]});
        aVar.a(new byte[]{bArr[0]});
        aVar.a(new byte[]{bArr[9]});
        aVar.a(new byte[]{bArr[12]});
        aVar.a(new byte[]{bArr[22]});
        aVar.a(new byte[]{bArr[25]});
        aVar.a(new byte[]{bArr[10], bArr[68], bArr[49], bArr[41], bArr[37]});
        aVar.a(new byte[]{bArr[58]});
        aVar.a(new byte[]{bArr[5]});
        byte b4 = bArr[12];
        byte b5 = bArr[41];
        aVar.a(new byte[]{b4, b5, b5});
        aVar.a(new byte[]{bArr[62]});
        aVar.a(new byte[]{bArr[1]});
        aVar.a(new byte[]{bArr[47], bArr[68], bArr[49], bArr[41], bArr[37]});
        aVar.a(new byte[]{bArr[2], bArr[70], bArr[41], bArr[45], bArr[38]});
        aVar.a(new byte[]{bArr[68], bArr[41], bArr[37], bArr[49], bArr[46]});
        byte b6 = bArr[31];
        byte b7 = bArr[51];
        aVar.a(new byte[]{b6, b7, bArr[41], b7, bArr[46]});
        byte b8 = bArr[20];
        byte b9 = bArr[49];
        aVar.a(new byte[]{b8, b9, bArr[46], b9, bArr[39]});
        byte b10 = bArr[45];
        aVar.a(new byte[]{b10, bArr[51], b10, bArr[49], bArr[41]});
        aVar.a(new byte[]{bArr[46], bArr[37], bArr[49], bArr[43]});
        aVar.a(new byte[]{bArr[39]});
        aVar.a(new byte[]{bArr[14]});
        aVar.a(new byte[]{bArr[46], bArr[37], bArr[58], bArr[38], bArr[51], bArr[48]});
        aVar.a(new byte[]{bArr[9], bArr[37], bArr[58], bArr[38], bArr[51], bArr[48]});
        aVar.a(new byte[]{bArr[28]});
        aVar.a(new byte[]{bArr[53], bArr[49], bArr[41], bArr[70], bArr[37]});
        aVar.a(new byte[]{bArr[68], bArr[51], bArr[39], bArr[57], bArr[49], bArr[46], bArr[37]});
        aVar.a(new byte[]{bArr[46], bArr[49], bArr[48], bArr[43], bArr[51], bArr[39]});
        byte b11 = bArr[2];
        byte b12 = bArr[38];
        byte b13 = bArr[41];
        aVar.a(new byte[]{b11, b12, b13, b13, b12, bArr[47]});
        aVar.a(new byte[]{bArr[52], bArr[46], bArr[51], bArr[39]});
        aVar.a(new byte[]{bArr[39], bArr[49], bArr[68], bArr[46], bArr[51]});
        byte b14 = bArr[43];
        byte b15 = bArr[37];
        aVar.a(new byte[]{b14, b15, bArr[53], bArr[38], bArr[68], b15});
        aVar.a(new byte[]{bArr[4]});
        aVar.a(new byte[]{bArr[38]});
        aVar.a(new byte[]{bArr[60]});
        aVar.a(new byte[]{bArr[20], bArr[51], bArr[38], bArr[48], bArr[45]});
        aVar.a(new byte[]{bArr[20]});
        aVar.a(new byte[]{bArr[10]});
        byte b16 = bArr[10];
        byte b17 = bArr[45];
        aVar.a(new byte[]{b16, b17, bArr[49], b17, bArr[37]});
        aVar.a(new byte[]{bArr[6]});
        aVar.a(new byte[]{bArr[64]});
        aVar.a(new byte[]{bArr[41], bArr[51], bArr[49], bArr[43]});
        aVar.a(new byte[]{bArr[21]});
        aVar.a(new byte[]{bArr[8], bArr[38], bArr[39], bArr[37]});
        aVar.a(new byte[]{bArr[6], bArr[49], bArr[50], bArr[47]});
        aVar.a(new byte[]{bArr[25], bArr[51], bArr[70], bArr[46], bArr[47]});
        aVar.a(new byte[]{bArr[2], bArr[38], bArr[48], bArr[70], bArr[45], bArr[37], bArr[47]});
        aVar.a(new byte[]{bArr[10], bArr[37], bArr[68], bArr[51], bArr[48], bArr[43], bArr[47]});
        aVar.a(new byte[]{bArr[2], bArr[49], bArr[68], bArr[46], bArr[51]});
        aVar.a(new byte[]{bArr[15]});
        aVar.a(new byte[]{bArr[16], bArr[37], bArr[46], bArr[47], bArr[38], bArr[51], bArr[48]});
        aVar.a(new byte[]{bArr[41], bArr[51], bArr[58]});
        aVar.a(new byte[]{bArr[10], bArr[59], bArr[38], bArr[57], bArr[37]});
        aVar.a(new byte[]{bArr[42], bArr[70], bArr[38], bArr[41], bArr[43]});
        aVar.a(new byte[]{bArr[48]});
        aVar.a(new byte[]{bArr[12], bArr[48], bArr[50]});
        aVar.a(new byte[]{bArr[6], bArr[37], bArr[52], bArr[49], bArr[70], bArr[41], bArr[45]});
        aVar.a(new byte[]{bArr[66]});
        byte b18 = bArr[47];
        byte b19 = bArr[68];
        byte b20 = bArr[46];
        byte b21 = bArr[37];
        aVar.a(new byte[]{b18, b19, b20, b21, b21, bArr[48]});
        byte b22 = bArr[14];
        byte b23 = bArr[52];
        aVar.a(new byte[]{b22, b23, b23});
        aVar.a(new byte[]{bArr[1], bArr[39], bArr[49], bArr[58], bArr[37]});
        aVar.a(new byte[]{bArr[17]});
        byte b24 = bArr[46];
        byte b25 = bArr[37];
        aVar.a(new byte[]{b24, b25, bArr[57], b25, bArr[49], bArr[45]});
        aVar.a(new byte[]{bArr[43], bArr[37], bArr[41], bArr[49], bArr[50]});
        aVar.a(new byte[]{bArr[11], bArr[37], bArr[64], bArr[45]});
        aVar.a(new byte[]{bArr[43], bArr[49], bArr[50]});
        aVar.a(new byte[]{bArr[47], bArr[62], bArr[51], bArr[59]});
        aVar.a(new byte[]{bArr[39], bArr[37], bArr[45], bArr[62], bArr[51], bArr[43]});
        aVar.a(new byte[]{bArr[11]});
        aVar.a(new byte[]{bArr[2]});
        aVar.a(new byte[]{bArr[10], bArr[38], bArr[67], bArr[37]});
        byte b26 = bArr[8];
        byte b27 = bArr[37];
        aVar.a(new byte[]{b26, b27, bArr[39], bArr[57], bArr[41], bArr[49], bArr[45], b27});
        byte b28 = bArr[2];
        byte b29 = bArr[37];
        byte b30 = bArr[47];
        aVar.a(new byte[]{b28, b29, b30, b30, bArr[49], bArr[58], b29});
        byte b31 = bArr[10];
        byte b32 = bArr[37];
        byte b33 = bArr[45];
        aVar.a(new byte[]{b31, b32, b33, b33, bArr[38], bArr[48], bArr[58]});
        aVar.a(new byte[]{bArr[4], bArr[38], bArr[48], bArr[37], bArr[47]});
        aVar.a(new byte[]{bArr[47]});
        aVar.a(new byte[]{bArr[10], bArr[68], bArr[51], bArr[46], bArr[37]});
        aVar.a(new byte[]{bArr[57], bArr[70], bArr[45]});
        aVar.a(new byte[]{bArr[2], bArr[49], bArr[45], bArr[68], bArr[62]});
        aVar.a(new byte[]{bArr[47], bArr[45], bArr[51], bArr[57]});
        aVar.a(new byte[]{bArr[5], bArr[70], bArr[38], bArr[41], bArr[43], bArr[37], bArr[46]});
        aVar.a(new byte[]{bArr[5], bArr[49], bArr[68], bArr[66], bArr[58], bArr[46], bArr[51], bArr[70], bArr[48], bArr[43]});
        aVar.a(new byte[]{bArr[48], bArr[51]});
        byte b34 = bArr[51];
        byte b35 = bArr[52];
        aVar.a(new byte[]{b34, b35, b35, bArr[47], bArr[37], bArr[45]});
        aVar.a(new byte[]{bArr[38], bArr[43]});
        byte b36 = bArr[12];
        byte b37 = bArr[68];
        byte b38 = bArr[37];
        byte b39 = bArr[47];
        byte b40 = bArr[38];
        aVar.a(new byte[]{b36, b37, b37, b38, b39, b39, b40, bArr[42], b40, bArr[41], b40, bArr[45], bArr[50]});
        aVar.a(new byte[]{bArr[70]});
        aVar.a(new byte[]{bArr[59]});
        aVar.a(new byte[]{bArr[41]});
        aVar.a(new byte[]{bArr[51]});
        aVar.a(new byte[]{bArr[57]});
        aVar.a(new byte[]{bArr[16], bArr[49], bArr[46], bArr[47]});
        byte b41 = bArr[9];
        byte b42 = bArr[37];
        aVar.a(new byte[]{b41, b42, bArr[52], bArr[46], b42, bArr[47], bArr[62]});
        aVar.a(new byte[]{bArr[68], bArr[51], bArr[57], bArr[50]});
        aVar.a(new byte[]{bArr[10], bArr[45], bArr[46], bArr[38], bArr[48], bArr[58]});
        aVar.a(new byte[]{bArr[14], bArr[52]});
        byte b43 = bArr[39];
        byte b44 = bArr[38];
        byte b45 = bArr[41];
        aVar.a(new byte[]{b43, b44, b45, b45, b44, bArr[47]});
        aVar.a(new byte[]{bArr[47], bArr[70], bArr[42]});
        aVar.a(new byte[]{bArr[52], bArr[51], bArr[46], bArr[39], bArr[49], bArr[45]});
        aVar.a(new byte[]{bArr[57], bArr[49], bArr[46], bArr[47], bArr[37]});
        aVar.a(new byte[]{bArr[6], bArr[38], bArr[49], bArr[41], bArr[51], bArr[58]});
        aVar.a(new byte[]{bArr[33]});
        aVar.a(new byte[]{bArr[6], bArr[37], bArr[42], bArr[70], bArr[58]});
        aVar.a(new byte[]{bArr[31], bArr[51], bArr[39], bArr[57], bArr[49], bArr[46], bArr[37]});
        aVar.a(new byte[]{bArr[22], bArr[38], bArr[43], bArr[45], bArr[62]});
        byte b46 = bArr[31];
        byte b47 = bArr[70];
        byte b48 = bArr[45];
        aVar.a(new byte[]{b46, b47, b48, bArr[51], b47, b48, bArr[47]});
        aVar.a(new byte[]{bArr[2], bArr[51], bArr[43], bArr[37]});
        aVar.a(new byte[]{bArr[59], bArr[46], bArr[38], bArr[45], bArr[37]});
        byte b49 = bArr[49];
        byte b50 = bArr[57];
        aVar.a(new byte[]{b49, b50, b50, bArr[37], bArr[48], bArr[43]});
        aVar.a(new byte[]{bArr[26]});
        aVar.a(new byte[]{bArr[31], bArr[51], bArr[43], bArr[37]});
        byte b51 = bArr[68];
        byte b52 = bArr[51];
        byte b53 = bArr[48];
        aVar.a(new byte[]{b51, b52, b53, bArr[45], bArr[49], bArr[38], b53, bArr[47]});
        byte b54 = bArr[46];
        byte b55 = bArr[37];
        aVar.a(new byte[]{b54, b55, bArr[39], bArr[51], bArr[53], b55});
        aVar.a(new byte[]{bArr[31], bArr[41], bArr[38], bArr[68], bArr[66]});
        byte b56 = bArr[49];
        aVar.a(new byte[]{b56, bArr[45], b56, bArr[48]});
        aVar.a(new byte[]{bArr[49], bArr[42], bArr[47]});
        aVar.a(new byte[]{bArr[45], bArr[51]});
        byte b57 = bArr[10];
        byte b58 = bArr[68];
        byte b59 = bArr[46];
        byte b60 = bArr[37];
        aVar.a(new byte[]{b57, b58, b59, b60, b60, bArr[48]});
        byte b61 = bArr[9];
        byte b62 = bArr[70];
        byte b63 = bArr[48];
        aVar.a(new byte[]{b61, b62, b63, b63, bArr[38], b63, bArr[58]});
        aVar.a(new byte[]{bArr[42], bArr[70], bArr[38], bArr[41], bArr[43], bArr[37], bArr[46]});
        aVar.a(new byte[]{bArr[14], bArr[57], bArr[49], bArr[68], bArr[38], bArr[45], bArr[50]});
        byte b64 = bArr[47];
        byte b65 = bArr[37];
        aVar.a(new byte[]{b64, b65, bArr[41], b65, bArr[68], bArr[45]});
        aVar.a(new byte[]{bArr[57], bArr[41], bArr[49], bArr[50]});
        aVar.a(new byte[]{bArr[67]});
        aVar.a(new byte[]{bArr[4], bArr[49], bArr[47], bArr[45]});
        aVar.a(new byte[]{bArr[41], bArr[37], bArr[52], bArr[45]});
        aVar.a(new byte[]{bArr[45], bArr[51], bArr[57]});
        aVar.a(new byte[]{bArr[46], bArr[38], bArr[58], bArr[62], bArr[45]});
        byte b66 = bArr[42];
        byte b67 = bArr[51];
        byte b68 = bArr[45];
        aVar.a(new byte[]{b66, b67, b68, b68, b67, bArr[39]});
        byte b69 = bArr[62];
        byte b70 = bArr[51];
        aVar.a(new byte[]{b69, b70, bArr[46], bArr[38], bArr[67], b70, bArr[48], bArr[45], bArr[49], bArr[41]});
        aVar.a(new byte[]{bArr[53], bArr[37], bArr[46], bArr[45], bArr[38], bArr[68], bArr[49], bArr[41]});
        byte b71 = bArr[39];
        byte b72 = bArr[38];
        byte b73 = bArr[43];
        aVar.a(new byte[]{b71, b72, b73, b73, bArr[41], bArr[37]});
        aVar.a(new byte[]{bArr[57], bArr[49], bArr[43]});
        aVar.a(new byte[]{bArr[4], bArr[37], bArr[52], bArr[45]});
        aVar.a(new byte[]{bArr[33], bArr[57]});
        aVar.a(new byte[]{bArr[9], bArr[38], bArr[58], bArr[62], bArr[45]});
        aVar.a(new byte[]{bArr[6], bArr[51], bArr[59], bArr[48]});
        aVar.a(new byte[]{bArr[9], bArr[37], bArr[58]});
        byte b74 = bArr[62];
        byte b75 = bArr[38];
        byte b76 = bArr[58];
        aVar.a(new byte[]{b74, b75, b76, b74, bArr[41], b75, b76, b74, bArr[45]});
        aVar.a(new byte[]{bArr[12], bArr[47]});
        aVar.a(new byte[]{bArr[47], bArr[49], bArr[53], bArr[37]});
        aVar.a(new byte[]{bArr[58], bArr[46], bArr[51], bArr[70], bArr[57]});
        byte b77 = bArr[5];
        byte b78 = bArr[70];
        byte b79 = bArr[45];
        aVar.a(new byte[]{b77, b78, b79, b79, bArr[51], bArr[48]});
        byte b80 = bArr[11];
        byte b81 = bArr[37];
        aVar.a(new byte[]{b80, b81, bArr[58], bArr[49], bArr[45], bArr[38], bArr[53], b81});
        byte b82 = bArr[46];
        byte b83 = bArr[37];
        aVar.a(new byte[]{b82, b83, bArr[47], b83, bArr[45]});
        byte b84 = bArr[37];
        aVar.a(new byte[]{b84, bArr[41], bArr[49], bArr[57], bArr[47], b84, bArr[43]});
        byte b85 = bArr[68];
        byte b86 = bArr[70];
        byte b87 = bArr[46];
        aVar.a(new byte[]{b85, b86, b87, b87, bArr[37], bArr[48], bArr[45]});
        byte b88 = bArr[58];
        byte b89 = bArr[41];
        aVar.a(new byte[]{b88, b89, bArr[51], bArr[42], bArr[49], b89});
        aVar.a(new byte[]{bArr[12], bArr[68], bArr[45], bArr[38], bArr[51], bArr[48]});
        aVar.a(new byte[]{bArr[51], bArr[57], bArr[37], bArr[48]});
        byte b90 = bArr[45];
        aVar.a(new byte[]{b90, bArr[37], bArr[64], b90});
        aVar.a(new byte[]{bArr[68], bArr[49], bArr[47], bArr[37]});
        aVar.a(new byte[]{bArr[39], bArr[70], bArr[41], bArr[45], bArr[38]});
        aVar.a(new byte[]{bArr[47], bArr[59], bArr[38], bArr[57], bArr[37]});
        aVar.a(new byte[]{bArr[59], bArr[38], bArr[48]});
        aVar.a(new byte[]{bArr[49], bArr[68], bArr[45]});
        aVar.a(new byte[]{bArr[68], bArr[62], bArr[38], bArr[41], bArr[43]});
        aVar.a(new byte[]{bArr[68], bArr[51], bArr[70], bArr[48], bArr[45]});
        aVar.a(new byte[]{bArr[57], bArr[49], bArr[46], bArr[37], bArr[48], bArr[45]});
        aVar.a(new byte[]{bArr[53]});
        aVar.a(new byte[]{bArr[71]});
        aVar.a(new byte[]{bArr[46]});
        aVar.a(new byte[]{bArr[45]});
        aVar.a(new byte[]{bArr[34]});
        return (byte[][]) aVar.b;
    }
}
//
// Decompiled by Jadx - 1009ms
//
package X5;

import E0.n;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Point;
import android.graphics.Rect;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import d6.d;
import java.io.DataInputStream;
import java.io.File;
import java.sql.Date;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.regex.Pattern;

public final class e {
    public static final Pattern a = Pattern.compile("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$");

    public static byte[] A(DataInputStream dataInputStream) {
        int read;
        int i = Integer.MAX_VALUE;
        byte[] bArr = null;
        ArrayList<byte[]> arrayList = null;
        int i2 = 0;
        do {
            int min = Math.min(i, 8192);
            byte[] bArr2 = new byte[min];
            int i3 = 0;
            while (true) {
                read = dataInputStream.read(bArr2, i3, Math.min(min - i3, i));
                if (read <= 0) {
                    break;
                }
                i3 += read;
                i -= read;
            }
            if (i3 > 0) {
                if (0x7ffffff7 - i2 >= i3) {
                    i2 += i3;
                    if (bArr == null) {
                        bArr = bArr2;
                    } else {
                        if (arrayList == null) {
                            arrayList = new ArrayList();
                            arrayList.add(bArr);
                        }
                        arrayList.add(bArr2);
                    }
                } else {
                    throw new OutOfMemoryError("Required array size too large");
                }
            }
            if (read < 0) {
                break;
            }
        } while (i > 0);
        if (arrayList == null) {
            if (bArr == null) {
                return new byte[0];
            }
            if (bArr.length != i2) {
                bArr = Arrays.copyOf(bArr, i2);
            }
            return bArr;
        }
        byte[] bArr3 = new byte[i2];
        int i4 = 0;
        for (byte[] bArr4 : arrayList) {
            int min2 = Math.min(bArr4.length, i2);
            System.arraycopy(bArr4, 0, bArr3, i4, min2);
            i4 += min2;
            i2 -= min2;
        }
        return bArr3;
    }

    public static Date B() {
        return new Date(new java.util.Date().getTime());
    }

    public static int C(String str) {
        if (!q(str) && s(str)) {
            return (int) Long.parseLong(str);
        }
        return 0;
    }

    public static String D(long j, long j2) {
        return g(j >> 32, 8) + "-" + g(j >> 16, 4) + "-" + g(j, 4) + "-" + g(j2 >> 48, 4) + "-" + g(j2, 12);
    }

    public static int E(int i, int i2) {
        if (p(i, i2)) {
            return i & (~i2);
        }
        return i | i2;
    }

    public static Double F(Object obj) {
        if (obj instanceof Double) {
            return (Double) obj;
        }
        double d = Double.NaN;
        if (obj instanceof String) {
            try {
                d = Double.parseDouble((String) obj);
            } catch (Exception unused) {
            }
            return Double.valueOf(d);
        }
        return Double.valueOf(Double.NaN);
    }

    public static byte[] G(byte[] bArr, byte[] bArr2) {
        byte[] bArr3 = new byte[bArr.length];
        for (int i = 0; i < bArr.length; i++) {
            bArr3[i] = (byte) (bArr[i] ^ bArr2[i % bArr2.length]);
        }
        return bArr3;
    }

    public static void a(Stack stack, List list) {
        if (stack != null && list != null) {
            for (int size = list.size() - 1; size >= 0; size--) {
                stack.add(list.get(size));
            }
        }
    }

    public static boolean b(byte[] bArr, byte[] bArr2, int i) {
        if (bArr == null || bArr2 == null || bArr.length < i || bArr2.length < i) {
            return false;
        }
        for (int i2 = 0; i2 < i; i2++) {
            if (bArr[i2] != bArr2[i2]) {
                return false;
            }
        }
        return true;
    }

    public static int[] c(Point point) {
        int i = point.x;
        int i2 = point.y;
        int abs = Math.abs(i);
        int abs2 = Math.abs(i2);
        while (true) {
            if (abs == 0) {
                abs = abs2;
                break;
            }
            if (abs2 == 0 || abs == abs2) {
                break;
            }
            if (abs > abs2) {
                abs -= abs2;
            } else {
                abs2 -= abs;
            }
        }
        return new int[]{point.x / abs, point.y / abs};
    }

    public static String d(int i) {
        return String.format("#%08X", Integer.valueOf(i));
    }

    public static File e(String... strArr) {
        File file = new File(strArr[0]);
        for (int i = 1; i < strArr.length; i++) {
            if (strArr[i] != null) {
                file = new File(file, strArr[i]);
            }
        }
        return file;
    }

    public static char f(int i) {
        int i2;
        if (i < 1 || i > 60) {
            i = 0;
        }
        if (i < 10) {
            i2 = i + 48;
        } else if (i > 35) {
            i2 = i + 61;
        } else {
            i2 = i + 55;
        }
        return (char) i2;
    }

    public static String g(long j, int i) {
        long j2 = 1 << (i * 4);
        return Long.toHexString((j & (j2 - 1)) | j2).substring(1);
    }

    public static Bitmap h(Drawable drawable) {
        Bitmap createBitmap;
        if (drawable == null) {
            return null;
        }
        if (drawable instanceof BitmapDrawable) {
            BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;
            if (bitmapDrawable.getBitmap() != null) {
                return bitmapDrawable.getBitmap();
            }
        }
        if (drawable.getIntrinsicWidth() > 0 && drawable.getIntrinsicHeight() > 0) {
            createBitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);
        } else {
            createBitmap = Bitmap.createBitmap(1, 1, Bitmap.Config.ARGB_8888);
        }
        Canvas canvas = new Canvas(createBitmap);
        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
        drawable.draw(canvas);
        return createBitmap;
    }

    public static String i(String str) {
        if (str == null) {
            str = "";
        }
        return w(16, str.replaceAll("[^a-zA-Z0-9 ]", "").replaceAll("\\s\\s+", " ").trim().replaceAll("\\s", "_"), false) + "_" + System.currentTimeMillis();
    }

    public static ArrayList j(Point point, Point point2, int i) {
        ArrayList arrayList = new ArrayList();
        double hypot = Math.hypot(point2.x - point.x, point2.y - point.y);
        if (hypot > Math.max(1, i) && hypot > b.g) {
            double d = (r3 * r7) / hypot;
            double d2 = (r1 * r7) / hypot;
            for (int i2 = 1; r7 * i2 < hypot; i2++) {
                double d3 = i2;
                arrayList.add(new Point((int) Math.round((d * d3) + point.x), (int) Math.round((d3 * d2) + point.y)));
            }
        }
        return arrayList;
    }

    public static int[] k(String str) {
        if (q(str)) {
            return null;
        }
        String[] split = str.split(":");
        if (split.length != 2) {
            return null;
        }
        String trim = split[0].trim();
        split[0] = trim;
        if (s(trim)) {
            String trim2 = split[1].trim();
            split[1] = trim2;
            if (s(trim2)) {
                return new int[]{Integer.parseInt(split[0]), Integer.parseInt(split[1])};
            }
        }
        return null;
    }

    public static Rect l(String str) {
        if (q(str)) {
            return null;
        }
        String[] split = str.split(",");
        if (split.length < 4) {
            return null;
        }
        try {
            String trim = split[0].trim();
            split[0] = trim;
            if (s(trim)) {
                String trim2 = split[1].trim();
                split[1] = trim2;
                if (s(trim2)) {
                    String trim3 = split[2].trim();
                    split[2] = trim3;
                    if (s(trim3)) {
                        String trim4 = split[3].trim();
                        split[3] = trim4;
                        if (s(trim4)) {
                            int parseInt = Integer.parseInt(split[0]);
                            int parseInt2 = Integer.parseInt(split[1]);
                            return new Rect(parseInt, parseInt2, Integer.parseInt(split[2]) + parseInt, Integer.parseInt(split[3]) + parseInt2);
                        }
                    }
                }
            }
        } catch (Exception unused) {
        }
        return null;
    }

    public static String m(int[] iArr) {
        if (iArr.length != 2) {
            return null;
        }
        Locale locale = Locale.US;
        return iArr[0] + ":" + iArr[1];
    }

    public static String n(Rect rect) {
        return rect.left + ", " + rect.top + ", " + rect.width() + ", " + rect.height();
    }

    public static int o(int i, String str) {
        if (str == null) {
            return i;
        }
        try {
            return Integer.parseInt(str);
        } catch (Exception unused) {
            return i;
        }
    }

    public static boolean p(int i, int i2) {
        if ((i & i2) == i2) {
            return true;
        }
        return false;
    }

    public static boolean q(CharSequence charSequence) {
        int length;
        if (charSequence != null && (length = charSequence.length()) > 0) {
            for (int i = 0; i < length; i++) {
                if (!Character.isWhitespace(charSequence.charAt(i))) {
                    return false;
                }
            }
        }
        return true;
    }

    public static boolean r(String str) {
        if (str == null) {
            return false;
        }
        return str.matches("^-?\\d+(?:\\.\\d+)?");
    }

    public static boolean s(String str) {
        if (str == null) {
            return false;
        }
        return str.matches("\\d+(?:\\.\\d+)?");
    }

    public static boolean t(int i, int i2, int i3, int i4) {
        boolean z;
        boolean z2;
        if (i < i2) {
            z = true;
        } else {
            z = false;
        }
        if (i3 < i4) {
            z2 = true;
        } else {
            z2 = false;
        }
        if (z == z2) {
            return false;
        }
        return true;
    }

    public static boolean u(int i, int i2, int i3, int i4) {
        if (Math.min(i, i2) == Math.min(i3, i4) && Math.max(i, i2) == Math.max(i3, i4)) {
            return false;
        }
        return true;
    }

    public static <T> String v(List<T> list, String str, d<String, T> dVar) {
        if (list != null && list.size() != 0) {
            if (list.size() == 1) {
                T t = list.get(0);
                if (dVar != null) {
                    t = (T) dVar.a(t);
                }
                return t;
            }
            StringBuilder sb = new StringBuilder();
            int size = list.size();
            for (int i = 0; i < size; i++) {
                T t2 = list.get(i);
                if (dVar != null) {
                    t2 = (T) dVar.a(t2);
                }
                sb.append(t2);
                if (i < size - 1) {
                    sb.append(str);
                }
            }
            return sb.toString();
        }
        return null;
    }

    public static String w(int i, String str, boolean z) {
        if (str == null) {
            return null;
        }
        if (str.length() <= i) {
            return str;
        }
        String substring = str.substring(0, i);
        if (z) {
            return n.m(substring, "…");
        }
        return substring;
    }

    public static double x(long j) {
        double longBitsToDouble = Double.longBitsToDouble(j);
        if (!Double.isInfinite(longBitsToDouble) && !Double.isNaN(longBitsToDouble)) {
            return longBitsToDouble;
        }
        return -1L;
    }

    public static int[] y(String str) {
        int[] iArr = new int[4];
        if (str == null) {
            return iArr;
        }
        String[] split = str.split("\\.");
        if (split.length == 0) {
            return null;
        }
        if (split.length > 0 && r(split[0])) {
            iArr[0] = (int) Double.parseDouble(split[0]);
        }
        if (split.length > 1 && r(split[1])) {
            iArr[1] = (int) Double.parseDouble(split[1]);
        }
        if (split.length > 2 && r(split[2])) {
            iArr[2] = (int) Double.parseDouble(split[2]);
        }
        if (split.length > 3 && r(split[3])) {
            iArr[3] = (int) Double.parseDouble(split[3]);
        }
        return iArr;
    }

    public static int z(int i, int i2) {
        if (i <= 0) {
            return Math.max(i2, 0);
        }
        return i;
    }
}
